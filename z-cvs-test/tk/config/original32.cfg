# File: original32.cfg

# Purpose: icon configuration file

#
# Copyright (c) 1997-2001 Tim Baker
#
# This software may be copied and distributed for educational, research, and
# not for profit purposes provided that this copyright and statement are
# included in all such copies.
#


# A few words of explanation are in order regarding this icon configuration.
# Years ago when I was developing a graphical Angband called Menegroth on
# my Macintosh IIsi my friend spent countless hours surfing the net for
# artwork. Much of the graphics came from fantasy art, some from shareware
# games, and a few were actually original. Since Menegroth was never
# released (only about 3 people ever saw it) using commercial art was
# not a problem. When I started development of AngbandTk, I used those
# bits of artwork from Menegroth which were original or "not too commercial".
# This was before Adam Bolt came out with his graphics (hallelujah!),
# which the other icon configurations use. So the icon collection used here
# is incomplete and not used by the other *AngbandTks.

# Also notice this file does something none of the other ".cfg" files do,
# which is use the "icon mask" command. The "icon mask" command allows us
# to assign a specific mask to a specific icon, in effect allowing many
# icons to use the same mask (the potions, for example). The resultant
# savings in disk space and memory was a concern when I was using my 20MHz
# IIsi with only 3MB of RAM (7MB with virtual memory) and a 20MB hard drive.
# Now I'm on a 200MHz Pentium with a 2GB hard drive, so efficiency goes
# out the window.


### You must call "angband init_icons" to initialize the icon
### environment. The argument is the size of icons to use,
### either 16 or 32.
NSConfig::InitIcons 32

# The "feature" icon type
NSConfig::CreateIconType feature feature32.gif "" 32

# The "unmasked" icon type
NSConfig::CreateIconType unmasked unmasked.gif "" 32

# The "dragon" icon type
NSConfig::CreateIconType dragon dragon.gif "" 32

# The "masked" icon type
NSConfig::CreateIconType masked masked.gif masked-mask.gif:makeMask 32

# Define the "potion" icon type
NSConfig::CreateIconType potion potion.gif potion-mask.gif:makeMask 32

# Define the "jelly" icon type
NSConfig::CreateIconType jelly jelly.gif jelly-mask.gif:makeMask 32

# Define the "vortex" icon type.
NSConfig::CreateIconType vortex vortex.gif "" 32

# The "mushroom" icon type
NSConfig::CreateIconType mushroom mushroom.gif mushroom-mask.gif:makeMask 32

# The "town" icon type
NSConfig::CreateIconType town town32.gif "" 32

# The "effect" icon type
NSConfig::CreateIconType effect adam_effect32.gif adam_effect32_mask.gif:makeMask 32

# The "feature2" icon type
NSConfig::CreateIconType feature2 adam16_feature.gif "" 16

# The "town" file is shared by all xxx.cfg files
NSConfig::ShareConfigFile town town

##### ##### ##### #####

# Assign ascii type to everything
NSConfig::SourceOne classic-common

##### ##### ##### #####

# Hack
NSConfig::NoMoreIcons

# Money
icon mask -type masked -index 0 -maskindex 0
icon mask -type masked -index 1 -maskindex 0
icon mask -type masked -index 2 -maskindex 0
icon mask -type masked -index 3 -maskindex 0
icon mask -type masked -index 4 -maskindex 0

# Gem
icon mask -type masked -index 5 -maskindex 1

# Staff
icon mask -type masked -index 6 -maskindex 2

# Wand
icon mask -type masked -index 7 -maskindex 3

# Rod
icon mask -type masked -index 8 -maskindex 4

# Trap
icon mask -type masked -index 9 -maskindex 5

# Shot
icon mask -type masked -index 10 -maskindex 6

# Bolts
icon mask -type masked -index 11 -maskindex 7

# 1 Bolt
icon mask -type masked -index 12 -maskindex 8

# Arrows
icon mask -type masked -index 13 -maskindex 9

# 1 Arrow
icon mask -type masked -index 14 -maskindex 10

# Torch
icon mask -type masked -index 15 -maskindex 11

# Potion
icon mask -type masked -index 16 -maskindex 12

# Flask
icon mask -type masked -index 17 -maskindex 13

# Food
icon mask -type masked -index 18 -maskindex 14

# Skull
icon mask -type masked -index 19 -maskindex 15

# Pile
icon mask -type masked -index 20 -maskindex 16

# Rag
icon mask -type masked -index 21 -maskindex 17

# Crossbow
icon mask -type masked -index 22 -maskindex 18

# Molds
icon mask -type masked -index 23 -maskindex 19
icon mask -type masked -index 24 -maskindex 19
icon mask -type masked -index 25 -maskindex 19
icon mask -type masked -index 26 -maskindex 19
icon mask -type masked -index 27 -maskindex 19
icon mask -type masked -index 28 -maskindex 19
icon mask -type masked -index 29 -maskindex 19
icon mask -type masked -index 30 -maskindex 19

# Demonic quylthulg?
icon mask -type masked -index 31 -maskindex 20

# Nexus quylthulg
icon mask -type masked -index 32 -maskindex 21

# Quylthulg
icon mask -type masked -index 33 -maskindex 21

# Rotting quylthulg
icon mask -type masked -index 34 -maskindex 21

# Draconic quylthulg
icon mask -type masked -index 35 -maskindex 21

# Master quylthulg
icon mask -type masked -index 36 -maskindex 21

# Greater rotting quylthulg
icon mask -type masked -index 37 -maskindex 22

# Greater draconic quylthulg
icon mask -type masked -index 38 -maskindex 23

# Emporer quylthulg
icon mask -type masked -index 39 -maskindex 22

# Demonic quylthulg?
icon mask -type masked -index 40 -maskindex 22

# Dagger
icon mask -type masked -index 41 -maskindex 24

# Broken dagger
icon mask -type masked -index 42 -maskindex 25

# Boots
icon mask -type masked -index 43 -maskindex 26

# Crown
icon mask -type masked -index 44 -maskindex 27

# Broken stick
icon mask -type masked -index 45 -maskindex 28

# Shard of pottery
icon mask -type masked -index 46 -maskindex 29

# Shield
icon mask -type masked -index 47 -maskindex 30

# Mushroom
icon mask -type masked -index 48 -maskindex 31

# Ring
icon mask -type masked -index 49 -maskindex 32

# Spider
icon mask -type masked -index 50 -maskindex 33

# Blade
icon mask -type masked -index 51 -maskindex 34

# Battle axe
icon mask -type masked -index 52 -maskindex 35

# Blade
icon mask -type masked -index 53 -maskindex 36

# Pick
icon mask -type masked -index 54 -maskindex 37

# Mace
icon mask -type masked -index 55 -maskindex 38

# Blade
icon mask -type masked -index 56 -maskindex 39

# Blade
icon mask -type masked -index 57 -maskindex 40

# Ball n' Chain
icon mask -type masked -index 58 -maskindex 41

# Blade
icon mask -type masked -index 59 -maskindex 36

# Blade
icon mask -type masked -index 60 -maskindex 42

# Amulet
icon mask -type masked -index 61 -maskindex 43

# Helm
icon mask -type masked -index 62 -maskindex 44

# Bottle
icon mask -type masked -index 63 -maskindex 45

# Blade
icon mask -type masked -index 64 -maskindex 46

# Blade
icon mask -type masked -index 65 -maskindex 47

# Helm
icon mask -type masked -index 66 -maskindex 48

# Buckler
icon mask -type masked -index 67 -maskindex 49

# Shield
icon mask -type masked -index 68 -maskindex 50

# Amulet
icon mask -type masked -index 69 -maskindex 51

# Helm
icon mask -type masked -index 70 -maskindex 52

# Helm
icon mask -type masked -index 71 -maskindex 53

# Blade
icon mask -type masked -index 72 -maskindex 54

# Axe
icon mask -type masked -index 73 -maskindex 55

# Chest
icon mask -type masked -index 74 -maskindex 56

# Spike
icon mask -type masked -index 75 -maskindex 57

# Boots
icon mask -type masked -index 76 -maskindex 58

# Cloak
icon mask -type masked -index 77 -maskindex 59

# Helm
icon mask -type masked -index 78 -maskindex 60

# Shield
icon mask -type masked -index 79 -maskindex 61

# Amulet
icon mask -type masked -index 80 -maskindex 62

# Helm
icon mask -type masked -index 81 -maskindex 63

# Crown
icon mask -type masked -index 82 -maskindex 64

# Shield
icon mask -type masked -index 83 -maskindex 65

# Lantern
icon mask -type masked -index 84 -maskindex 66

# Burnin' Ring 1
icon mask -type masked -index 85 -maskindex 67

# Burnin' Ring 2
icon mask -type masked -index 86 -maskindex 68

# Burnin' Ring 3
icon mask -type masked -index 87 -maskindex 69

# Burnin' Ring 4
icon mask -type masked -index 88 -maskindex 70

# Ring
icon mask -type masked -index 89 -maskindex 71

# Ring
icon mask -type masked -index 90 -maskindex 72

# Blue Icky Thing 1
icon mask -type masked -index 91 -maskindex 73

# Blue Icky Thing 2
icon mask -type masked -index 92 -maskindex 74

# Green Icky Thing 1
icon mask -type masked -index 93 -maskindex 75

# Green Icky Thing 2
icon mask -type masked -index 94 -maskindex 76

# Red Icky Thing 1
icon mask -type masked -index 95 -maskindex 77

# Red Icky Thing 2
icon mask -type masked -index 96 -maskindex 78

# Red Icky Thing 3
icon mask -type masked -index 97 -maskindex 79

# The potion icons all use the same mask
set max [icon count potion]
for {set i 0} {$i < $max} {incr i} {
	icon mask -type potion -index $i -maskindex 0
}

# First and last jelly share first mask, others use second mask
icon mask -type jelly -index 0 -maskindex 0
icon mask -type jelly -index 1 -maskindex 1
icon mask -type jelly -index 2 -maskindex 2
icon mask -type jelly -index 27 -maskindex 0
icon mask -type jelly -index 28 -maskindex 1
icon mask -type jelly -index 29 -maskindex 2
for {set i 1} {$i <= 8} {incr i} {
	icon mask -type jelly -index [expr $i * 3] -maskindex 3
	icon mask -type jelly -index [expr $i * 3 + 1] -maskindex 4
	icon mask -type jelly -index [expr $i * 3 + 2] -maskindex 5
}

###
# Flavors
# --------------------
# Amulets, mushrooms, potions, rings, rods, staffs, and wands each have
# a unique colorful description that is randomized for each character.
# With AngbandTk, it is possible to assign a unique icon to any or all
# of these flavors, and then assign a flavor to an object. You can
# assign anything to a flavor that you can to a monster, object, etc
# (ie, assign a sprite or an icon).
###

# Assign "potion" type icons to the "potion" flavor. The "potion" icon
# type was defined above with the "icon createtype" command.
for {set i 0} {$i < 60} {incr i} {
	flavor assign potion $i -type potion -index $i
}

# Now assign "potion" flavor to each potion by "sval"
foreach k_idx [angband k_info find -tval TV_POTION] {
	set sval [angband k_info set $k_idx sval]
	assign set object $k_idx "flavor potion $sval"
}

# Assign masks to the "mushroom" icon type
for {set i 0} {$i < 20} {incr i} {
	if {($i == 2) || ($i == 15)} {
		icon mask -type mushroom -index $i -maskindex 1
	} else {
		icon mask -type mushroom -index $i -maskindex 0
	}
}

# Assign "mushroom" type icons to the "mushroom" flavor.
for {set i 0} {$i < 20} {incr i} {
	flavor assign mushroom $i -type mushroom -index $i
}


# Assign masked icons by object kind
foreach k_idx [angband k_info find -tval TV_ARROW] {
	assign set object $k_idx "icon masked 13"
}
foreach k_idx [angband k_info find -tval TV_BOLT] {
	assign set object $k_idx "icon masked 11"
}
foreach k_idx [angband k_info find -tval TV_LITE] {
	assign set object $k_idx "icon masked 15"
}
foreach k_idx [angband k_info find -tval TV_BOW] {
	assign set object $k_idx "icon masked 22"
}
foreach k_idx [angband k_info find -tval TV_HAFTED] {
	assign set object $k_idx "icon masked 52"
}
foreach k_idx [angband k_info find -tval TV_SWORD] {
	assign set object $k_idx "icon masked 53"
}
foreach k_idx [angband k_info find -tval TV_BOOTS] {
	assign set object $k_idx "icon masked 43"
}
foreach k_idx [angband k_info find -tval TV_SHIELD] {
	assign set object $k_idx "icon masked 47"
}
foreach k_idx [angband k_info find -tval TV_RING] {
	assign set object $k_idx "icon masked 49"
}
foreach k_idx [angband k_info find -tval TV_STAFF] {
	assign set object $k_idx "icon masked 6"
}
foreach k_idx [angband k_info find -tval TV_WAND] {
	assign set object $k_idx "icon masked 7"
}
foreach k_idx [angband k_info find -tval TV_ROD] {
	assign set object $k_idx "icon masked 8"
}
foreach k_idx [angband k_info find -tval TV_DIGGING] {
	assign set object $k_idx "icon masked 54"
}
foreach k_idx [angband k_info find -tval TV_FOOD] {
	assign set object $k_idx "icon masked 18"
}
foreach k_idx [angband k_info find -tval TV_FLASK] {
	assign set object $k_idx "icon masked 17"
}
foreach k_idx [angband k_info find -tval TV_SKELETON] {
	assign set object $k_idx "icon masked 19"
}
foreach k_idx [angband k_info find -tval TV_CROWN] {
	assign set object $k_idx "icon masked 44"
}

# Money
foreach k_idx [angband k_info find -tval TV_GOLD] {
	switch -- [angband k_info info $k_idx name] {
		copper {set iconIndex 0}
		silver {set iconIndex 1}
		gold {set iconIndex 2}
		mithril {set iconIndex 3}
		adamantite {set iconIndex 4}
		default {set iconIndex 5}
	}
	assign set object $k_idx "icon masked $iconIndex"
}

# Assign mushroom flavor to actual mushroom objects.
foreach k_idx [angband k_info find -tval TV_FOOD] {
	set sval [angband k_info set $k_idx sval]
	if {$sval >= 32} continue
	assign set object $k_idx "flavor mushroom $sval"
}

# Traps
assign set feature 3 "icon masked 9"
for {set f_idx 0x10} {$f_idx <= 0x1F} {incr f_idx} {
	assign set feature $f_idx "icon masked 9"
}

# Rounded Pebble/Iron Shot
assign set object 82 "icon masked 10"
assign set object 83 "icon masked 10"

# Filthy Rag
assign set object 102 "icon masked 21"

# Shard of Pottery
assign set object 389 "icon masked 46"

# Broken Stick
assign set object 390 "icon masked 45"



# Creeping coins
foreach r_idx [angband r_info find -d_char $] {
	switch -glob [angband r_info info $r_idx name] {
		*copper* {set iconIndex 0}
		*silver* {set iconIndex 1}
		*gold* {set iconIndex 2}
		*mithril* {set iconIndex 3}
		*adamantite* {set iconIndex 4}
	}
	assign set monster $r_idx "icon masked $iconIndex"
}

# Molds
foreach r_idx [angband r_info find -d_char m] {
	switch -glob [angband r_info info $r_idx name] {
		Brown* {set iconIndex 23}
		Red* {set iconIndex 24}
		Green* {set iconIndex 25}
		Grey* {set iconIndex 26}
		Death* {set iconIndex 27}
		Hairy* {set iconIndex 28}
		Disenchanter* {set iconIndex 29}
		Yellow* {set iconIndex 30}
	}
	assign set monster $r_idx "icon masked $iconIndex"
}

# Scorpions/Spiders
foreach r_idx [angband r_info find -d_char S] {
	assign set monster $r_idx "icon masked 50"
}

# Quylthulg's
foreach r_idx [angband r_info find -d_char Q] {
	switch -glob [angband r_info info $r_idx name] {
		Demonic* {set iconIndex 31}
		Nexus* {set iconIndex 32}
		Quylthulg {set iconIndex 33}
		Rotting* {set iconIndex 34}
		Draconic* {set iconIndex 35}
		Master* {set iconIndex 36}
		"Greater rotting*" {set iconIndex 37}
		"Greater draconic*" {set iconIndex 38}
		*Emperor* {set iconIndex 39}
		Qlzqqlzuup* {set iconIndex 40}
	}
	assign set monster $r_idx "icon masked $iconIndex"
}

# The next line chooses to light the dungeon based only on the radius of
# the character's light source, not by visibility. This requires a set of
# icons with 4 icons per feature. This is how it was done in Menegroth.
feature torchlite yes

# The next lines apply a gamma correction to various icon types to
# increase the brightness. There seems to be a difference from Mac to
# Windows (perhaps its all in the monitor).
foreach type [list feature unmasked dragon masked potion jelly vortex mushroom town] {
	icon gamma $type 1.2
}

# Synch icon data with mask data
NSConfig::Maskify masked
NSConfig::Maskify potion
NSConfig::Maskify jelly
NSConfig::Maskify mushroom
NSConfig::Maskify effect

# Since I don't choose a default icon based on race/class, I choose to save
# the character icon assignment to the "assign" file.
Global autoAssign 0

