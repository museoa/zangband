# File: Makefile.dos

# Purpose: Makefile support for "main-dos.c"

#
# Note: Rename to "Makefile" before using
#
# Allegro support by Robert Ruehlmann (rr9@angband.org)
#

#
# Basic definitions
#

LUAOBJS = \
  lua/lapi.o lua/ldebug.o lua/lmem.o lua/lstrlib.o lua/lvm.o \
  lua/tolua_lb.o lua/lauxlib.o lua/ldo.o lua/lobject.o lua/ltable.o \
  lua/lzio.o lua/tolua_rg.o lua/lbaselib.o lua/lfunc.o lua/lparser.o \
  lua/ltests.o lua/tolua_bd.o lua/tolua_tm.o lua/lcode.o lua/lgc.o \
  lua/lstate.o lua/ltm.o lua/tolua_eh.o lua/tolua_tt.o lua/ldblib.o \
  lua/llex.o lua/lstring.o lua/lundump.o lua/tolua_gp.o

TOLUAOBJS = \
  lua/tolua.o lua/tolualua.o lua/liolib.o \
  $(LUAOBJS)

# Objects
OBJS = \
  main.o main-dos.o main-ibm.o \
  artifact.o avatar.o birth.o bldg.o \
  cave.o cmd1.o cmd2.o cmd3.o \
  cmd4.o cmd5.o cmd6.o dungeon.o \
  effects.o fields.o files.o flavor.o generate.o \
  grid.o init1.o init2.o load.o \
  melee1.o melee2.o mind.o monster1.o \
  monster2.o mspells1.o mspells2.o mutation.o notes.o \
  obj_kind.o object1.o object2.o racial.o \
  quest.o rooms.o save.o scores.o \
  spells1.o spells2.o spells3.o store.o \
  streams.o tables.o util.o variable.o \
  wild1.o wild2.o wizard1.o wizard2.o xtra1.o \
  xtra2.o z-form.o z-rand.o z-term.o \
  z-util.o z-virt.o \
  script.o \
  l-monst.o l-object.o l-player.o l-random.o l-ui.o \
  l-misc.o l-spell.o \
  $(LUAOBJS)


# Compiler
CC = gcc

# Compiler flags
CFLAGS = -Wall -O2 -fno-strength-reduce -s -DUSE_DOS -DUSE_IBM \
  -D"USE_BACKGROUND" -D"USE_TRANSPARENCY"


# Libraries
LIBS = -lpc -lalleg

#
# Targets
#
default: zangband.exe
	copy zangband.exe ..
	del zangband.exe

install: zangband.exe
	copy zangband.exe ..

all: zangband.exe
	@echo All done.  Use 'make install' to install.


#
# Link executables
#
zangband.exe: $(OBJS)
	$(CC) $(CFLAGS) -o $@ $(OBJS) $(LIBS)

lua/tolua: $(TOLUAOBJS)
	$(CC) -o lua/tolua $(TOLUAOBJS) $(INCDIRS) $(LIBDIRS) $(LUALIBS)


#
# Compile source files
#
.c.o:
	$(CC) $(CFLAGS) -c -o $@ $<

#
# Build wrappers
#

l-monst.c: lua/tolua l-monst.pkg
	lua/tolua -n monster -o l-monst.c l-monst.pkg

l-object.c: lua/tolua l-object.pkg
	lua/tolua -n object -o l-object.c l-object.pkg

l-player.c: lua/tolua l-player.pkg
	lua/tolua -n player -o l-player.c l-player.pkg

l-random.c: lua/tolua l-random.pkg
	lua/tolua -n random -o l-random.c l-random.pkg

l-ui.c: lua/tolua l-ui.pkg
	lua/tolua -n ui -o l-ui.c l-ui.pkg

l-misc.c: lua/tolua l-misc.pkg
	lua/tolua -n misc -o l-misc.c l-misc.pkg

l-spell.c: lua/tolua l-spell.pkg
	lua/tolua -n spell -o l-spell.c l-spell.pkg

#
# Clean up
#
clean:
	del *.o
	del lua\*.o

cleanall: clean
	del *.exe
	del lua\*.exe


artifact.o: artifact.c $(INCS)
avatar.o: avatar.c $(INCS)
birth.o: birth.c $(INCS)
bldg.o: bldg.c $(INCS)
cave.o: cave.c $(INCS)
cmd1.o: cmd1.c $(INCS)
cmd2.o: cmd2.c $(INCS)
cmd3.o: cmd3.c $(INCS)
cmd4.o: cmd4.c $(INCS)
cmd5.o: cmd5.c $(INCS)
cmd6.o: cmd6.c $(INCS)
dungeon.o: dungeon.c $(INCS)
effects.o: effects.c $(INCS)
fields.o: fields.c $(INCS)
files.o: files.c $(INCS)
flavor.o: flavor.c $(INCS)
generate.o: generate.c $(INCS) generate.h grid.h rooms.h streams.h
grid.o: grid.c $(INCS) grid.h generate.h
rooms.o: rooms.c $(INCS) grid.h rooms.h generate.h
streams.o: streams.c $(INCS) grid.h generate.h
init1.o: init1.c $(INCS)
init2.o: init2.c $(INCS)
load.o: load.c $(INCS)
main-dos.o: main-dos.c $(INCS)
main.o: main.c $(INCS)
melee1.o: melee1.c $(INCS)
melee2.o: melee2.c $(INCS)
mind.o: mind.c $(INCS)
monster1.o: monster1.c $(INCS)
monster2.o: monster2.c $(INCS)
mspells1.o: mspells1.c $(INCS)
mspells2.o: mspells2.c $(INCS)
mutation.o: mutation.c $(INCS)
notes.o: notes.c $(INCS)
object1.o: object1.c $(INCS)
object2.o: object2.c $(INCS)
obj_kind.o: obj_kind.c $(INCS)
quest.o: quest.c $(INCS) wild.h grid.h
racial.o: racial.c $(INCS)
save.o: save.c $(INCS)
scores.o: scores.c $(INCS)
script.o: script.c $(INCS)
spells1.o: spells1.c $(INCS)
spells2.o: spells2.c $(INCS)
spells3.o: spells3.c $(INCS)
store.o: store.c $(INCS)
tables.o: tables.c $(INCS)
util.o: util.c $(INCS)
variable.o: variable.c $(INCS)
wild1.o: wild1.c $(INCS) wild.h grid.h
wild2.o: wild2.c $(INCS) wild.h grid.h
wizard1.o: wizard1.c $(INCS)
wizard2.o: wizard2.c $(INCS)
xtra1.o: xtra1.c $(INCS)
xtra2.o: xtra2.c $(INCS)
z-form.o: z-form.c $(HDRS) z-form.h z-util.h z-virt.h
z-rand.o: z-rand.c $(HDRS) z-rand.h
z-term.o: z-term.c $(HDRS) z-term.h z-virt.h
z-util.o: z-util.c $(HDRS) z-util.h
z-virt.o: z-virt.c $(HDRS) z-virt.h z-util.h

