.\src\monster_wrap.c

[ Python Module : monster ]


1.  class monster_type
======================
[ created from struct monster_type ]


self.r_idx
        [ Member data: returns s16b  ]
        Monster race index 

self.fy
        [ Member data: returns byte  ]
        Y location on map 

self.fx
        [ Member data: returns byte  ]
        X location on map 

self.hp
        [ Member data: returns s16b  ]
        Current Hit points 

self.maxhp
        [ Member data: returns s16b  ]
        Max Hit points 

self.csleep
        [ Member data: returns s16b  ]
        Inactive counter 

self.mspeed
        [ Member data: returns byte  ]
        Monster "speed" 

self.energy
        [ Member data: returns byte  ]
        Monster "energy" 

self.stunned
        [ Member data: returns byte  ]
        Monster is stunned 

self.confused
        [ Member data: returns byte  ]
        Monster is confused 

self.monfear
        [ Member data: returns byte  ]
        Monster is afraid 

self.cdis
        [ Member data: returns byte  ]
        Current dis from player 

self.mflag
        [ Member data: returns byte  ]
        Extra monster flags 

self.ml
        [ Member data: returns bool  ]
        Monster is "visible" 

self.hold_o_idx
        [ Member data: returns s16b  ]
        Object being held (if any) 

self.smart
        [ Member data: returns u32b  ]
        Field for "smart_learn" 

monster_type()
        [ Constructor: returns struct monster_type * ]

del this
        [ Destructor: returns void  ]

----------

get_monster(i)
        [ returns monster_type * ]

2.  class monster_blow
======================
[ created from struct monster_blow ]


self.method
        [ Member data: returns byte  ]

self.effect
        [ Member data: returns byte  ]

self.d_dice
        [ Member data: returns byte  ]

self.d_side
        [ Member data: returns byte  ]

3.  class monster_race
======================
[ created from struct monster_race ]


self.name
        [ Member data: returns u32b  ]
        Name (offset) 

self.text
        [ Member data: returns u32b  ]
        Text (offset) 

self.hdice
        [ Member data: returns byte  ]
        Creatures hit dice count 

self.hside
        [ Member data: returns byte  ]
        Creatures hit dice sides 

self.ac
        [ Member data: returns s16b  ]
        Armour Class 

self.sleep
        [ Member data: returns s16b  ]
        Inactive counter (base) 

self.aaf
        [ Member data: returns byte  ]
        Area affect radius (1-100) 

self.speed
        [ Member data: returns byte  ]
        Speed (normally 110) 

self.mexp
        [ Member data: returns s32b  ]
        Exp value for kill 

self.extra
        [ Member data: returns s16b  ]
        Unused (for now) 

self.freq_inate
        [ Member data: returns byte  ]
        Inate spell frequency 

self.freq_spell
        [ Member data: returns byte  ]
        Other spell frequency 

self.flags1
        [ Member data: returns u32b  ]
        Flags 1 (general) 

self.flags2
        [ Member data: returns u32b  ]
        Flags 2 (abilities) 

self.flags3
        [ Member data: returns u32b  ]
        Flags 3 (race/resist) 

self.flags4
        [ Member data: returns u32b  ]
        Flags 4 (inate/breath) 

self.flags5
        [ Member data: returns u32b  ]
        Flags 5 (normal spells) 

self.flags6
        [ Member data: returns u32b  ]
        Flags 6 (special spells) 

self.flags7
        [ Member data: returns u32b  ]
        Flags 7 (movement related abilities) 

self.flags8
        [ Member data: returns u32b  ]
        Flags 8 (wilderness info) 

self.flags9
        [ Member data: returns u32b  ]
        Flags 9 (drops info) 

self.blow
        [ Member data: returns monster_blow * ]
        Up to four blows per round 

self.level
        [ Member data: returns byte  ]
        Level of creature 

self.rarity
        [ Member data: returns byte  ]
        Rarity of creature 

self.d_attr
        [ Member data: returns byte  ]
        Default monster attribute 

self.d_char
        [ Member data: returns char  ]
        Default monster character 

self.x_attr
        [ Member data: returns byte  ]
        Desired monster attribute 

self.x_char
        [ Member data: returns char  ]
        Desired monster character 

self.max_num
        [ Member data: returns byte  ]
        Maximum population allowed per level 

self.cur_num
        [ Member data: returns byte  ]
        Monster population on current level 

self.r_sights
        [ Member data: returns s16b  ]
        Count sightings of this monster 

self.r_deaths
        [ Member data: returns s16b  ]
        Count deaths from this monster 

self.r_pkills
        [ Member data: returns s16b  ]
        Count monsters killed in this life 

self.r_tkills
        [ Member data: returns s16b  ]
        Count monsters killed in all lives 

self.r_wake
        [ Member data: returns byte  ]
        Number of times woken up (?) 

self.r_ignore
        [ Member data: returns byte  ]
        Number of times ignored (?) 

self.r_xtra1
        [ Member data: returns byte  ]
        Something (unused) 

self.r_xtra2
        [ Member data: returns byte  ]
        Something (unused) 

self.r_drop_gold
        [ Member data: returns byte  ]
        Max number of gold dropped at once 

self.r_drop_item
        [ Member data: returns byte  ]
        Max number of item dropped at once 

self.r_cast_inate
        [ Member data: returns byte  ]
        Max number of inate spells seen 

self.r_cast_spell
        [ Member data: returns byte  ]
        Max number of other spells seen 

self.r_blows
        [ Member data: returns byte * ]
        Number of times each blow type was seen 

self.r_flags1
        [ Member data: returns u32b  ]
        Observed racial flags 

self.r_flags2
        [ Member data: returns u32b  ]
        Observed racial flags 

self.r_flags3
        [ Member data: returns u32b  ]
        Observed racial flags 

self.r_flags4
        [ Member data: returns u32b  ]
        Observed racial flags 

self.r_flags5
        [ Member data: returns u32b  ]
        Observed racial flags 

self.r_flags6
        [ Member data: returns u32b  ]
        Observed racial flags 

self.r_flags7
        [ Member data: returns u32b  ]
        Observed racial flags 

----------

get_wilderness_flag()
        [ returns int  ]

sanity_blast(m_ptr,necro)
        [ returns void  ]

delete_monster_idx(i)
        [ returns void  ]

delete_monster(y,x)
        [ returns void  ]

compact_monsters(size)
        [ returns void  ]

wipe_m_list()
        [ returns void  ]

m_pop()
        [ returns s16b  ]

get_mon_num_prep(monster_hook,monster_hook2)
        [ returns errr  ]

get_mon_num(level)
        [ returns s16b  ]

monster_desc(desc,m_ptr,mode)
        [ returns void  ]

lore_do_probe(m_idx)
        [ returns void  ]

lore_treasure(m_idx,num_item,num_gold)
        [ returns void  ]

update_mon(m_idx,full)
        [ returns void  ]

update_monsters(full)
        [ returns void  ]

place_monster_aux(y,x,r_idx,slp,grp,friendly,pet)
        [ returns bool  ]

place_monster(y,x,slp,grp)
        [ returns bool  ]

alloc_horde(y,x)
        [ returns bool  ]

alloc_monster(dis,slp)
        [ returns bool  ]

summon_specific(y1,x1,lev,type,group,friendly,pet)
        [ returns bool  ]

multiply_monster(m_idx,clone,friendly,pet)
        [ returns bool  ]

update_smart_learn(m_idx,what)
        [ returns void  ]

place_monster_one(y,x,r_idx,slp,friendly,pet)
        [ returns bool  ]

player_place(y,x)
        [ returns bool  ]

monster_drop_carried_objects(m_ptr)
        [ returns void  ]

monster_dungeon(r_idx)
        [ returns bool  ]

monster_quest(r_idx)
        [ returns bool  ]

monster_ocean(r_idx)
        [ returns bool  ]

monster_shore(r_idx)
        [ returns bool  ]

monster_town(r_idx)
        [ returns bool  ]

monster_wood(r_idx)
        [ returns bool  ]

monster_volcano(r_idx)
        [ returns bool  ]

monster_mountain(r_idx)
        [ returns bool  ]

monster_grass(r_idx)
        [ returns bool  ]

monster_deep_water(r_idx)
        [ returns bool  ]

monster_shallow_water(r_idx)
        [ returns bool  ]

monster_lava(r_idx)
        [ returns bool  ]

get_monster_hook()
        [ returns monster_hook_type  ]

get_monster_hook2(y,x)
        [ returns monster_hook_type  ]

is_friendly(m_ptr)
        [ returns bool  ]

set_friendly(m_ptr)
        [ returns void  ]

is_pet(m_ptr)
        [ returns bool  ]

set_pet(m_ptr)
        [ returns void  ]

is_hostile(m_ptr)
        [ returns bool  ]

set_hostile(m_ptr)
        [ returns void  ]

monster_can_cross_terrain(feat,r_ptr)
        [ returns bool  ]

are_enemies(m_ptr1,m_ptr2)
        [ returns bool  ]

monster_living(r_ptr)
        [ returns bool  ]

