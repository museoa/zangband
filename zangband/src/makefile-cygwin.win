# This is a makefile for the Cygwin 2.01 Beta release which may
# be downloaded by following the links from the url:
# http://sourceware.cygnus.com/cygwin/download.html. The file
# you want is full.exe which is roughly 14Mb in size.
#
# In order for the makefile to work you must install Cygwin
# into your chosen directory and make sure your path points to
# the directory in which gcc.exe is located. This will usually
# be: c:\cygnus\cygwin-b20\h-i586-cygwin32\bin.
#
# The following changes to the source are required to make the
# compile work:
#
# In z-config.h, comment out the defines for 'USE_GRAPHICS'
# and 'USE_SOUND'. (Note that I have not as yet got sound and
# graphics working)
#
# In main-win.c, comment out lines 835 through 838 ie.
# 835:  else if (mkdir(s)) 
# 836:  {
# 837:          quit_fmt("Unable to create directory:\n%s", s);
# 838:  }
#
# In main-win.c, comment out lines 3917 and 3918 ie.
# 3917: if (infGraph.hPalette) DeleteObject(infGraph.hPalette);
# 3918: if (infGraph.hBitmap) DeleteObject(infGraph.hBitmap);


#
# File locations - change these as appropriate
#

CYGDIR	=	d:/cygnus/cygwin-b20/h-i586-cygwin32
OBJDIR	=	d:/zangband/src
BINDIR	=	d:/zangband/src
SRCDIR	=	d:/zangband/src


#
# Standard defines
#

CC		=	gcc
WRES		=	windres
LIBDIRS	=	-L$(CYGDIR)/lib
INCDIRS	=	-I$(CYGDIR)/i586-cygwin32/include/mingw32
LIBS		=	-s -mno-cygwin -mwindows -e _mainCRTStartup
CFLAGS	=	-Wall -O2 -fno-strength-reduce


SRCS		= \
	$(SRCDIR)/angband.rc \
	$(SRCDIR)/artifact.c \
	$(SRCDIR)/avatar.c \
	$(SRCDIR)/birth.c \
	$(SRCDIR)/bldg.c \
	$(SRCDIR)/cave.c \
	$(SRCDIR)/cmd1.c \
	$(SRCDIR)/cmd2.c \
	$(SRCDIR)/cmd3.c \
	$(SRCDIR)/cmd4.c \
	$(SRCDIR)/cmd5.c \
	$(SRCDIR)/cmd6.c \
	$(SRCDIR)/dungeon.c \
	$(SRCDIR)/effects.c \
	$(SRCDIR)/files.c \
	$(SRCDIR)/flavor.c \
	$(SRCDIR)/generate.c \
	$(SRCDIR)/grid.c \
	$(SRCDIR)/init1.c \
	$(SRCDIR)/init2.c \
	$(SRCDIR)/load.c \
	$(SRCDIR)/main.c \
	$(SRCDIR)/main-win.c \
	$(SRCDIR)/melee1.c \
	$(SRCDIR)/melee2.c \
	$(SRCDIR)/mind.c \
	$(SRCDIR)/monster1.c \
	$(SRCDIR)/monster2.c \
	$(SRCDIR)/mspells1.c \
	$(SRCDIR)/mspells2.c \
	$(SRCDIR)/mutation.c \
	$(SRCDIR)/obj_kind.c \
	$(SRCDIR)/object1.c \
	$(SRCDIR)/object2.c \
	$(SRCDIR)/racial.c \
	$(SRCDIR)/rooms.c \
	$(SRCDIR)/save.c \
	$(SRCDIR)/scores.c \
	$(SRCDIR)/spells1.c \
	$(SRCDIR)/spells2.c \
	$(SRCDIR)/spells3.c \
	$(SRCDIR)/store.c \
	$(SRCDIR)/streams.c \
	$(SRCDIR)/tables.c \
	$(SRCDIR)/util.c \
	$(SRCDIR)/variable.c \
	$(SRCDIR)/wild.c \
	$(SRCDIR)/wizard1.c \
	$(SRCDIR)/wizard2.c \
	$(SRCDIR)/xtra1.c \
	$(SRCDIR)/xtra2.c \
	$(SRCDIR)/z-form.c \
	$(SRCDIR)/z-rand.c \
	$(SRCDIR)/z-term.c \
	$(SRCDIR)/z-util.c \
	$(SRCDIR)/z-virt.c

# Readdib doesn't compile (hence no use of graphics)
#       $(SRCDIR)/readdib.c


EXOBJS	= \
	$(OBJDIR)/angband.res \
	$(OBJDIR)/artifact.o \
	$(OBJDIR)/avatar.o \
	$(OBJDIR)/birth.o \
	$(OBJDIR)/bldg.o \
	$(OBJDIR)/cave.o \
	$(OBJDIR)/cmd1.o \
	$(OBJDIR)/cmd2.o \
	$(OBJDIR)/cmd3.o \
	$(OBJDIR)/cmd4.o \
	$(OBJDIR)/cmd5.o \
	$(OBJDIR)/cmd6.o \
	$(OBJDIR)/dungeon.o \
	$(OBJDIR)/effects.o \
	$(OBJDIR)/files.o \
	$(OBJDIR)/flavor.o \
	$(OBJDIR)/generate.o \
	$(OBJDIR)/grid.o \
	$(OBJDIR)/init1.o \
	$(OBJDIR)/init2.o \
	$(OBJDIR)/load.o \
	$(OBJDIR)/main.o \
	$(OBJDIR)/main-win.o \
	$(OBJDIR)/melee1.o \
	$(OBJDIR)/melee2.o \
	$(OBJDIR)/mind.o \
	$(OBJDIR)/monster1.o \
	$(OBJDIR)/monster2.o \
	$(OBJDIR)/mspells1.o \
	$(OBJDIR)/mspells2.o \
	$(OBJDIR)/mutation.o \
	$(OBJDIR)/obj_kind.o \
	$(OBJDIR)/object1.o \
	$(OBJDIR)/object2.o \
	$(OBJDIR)/racial.o \
	$(OBJDIR)/rooms.o \
	$(OBJDIR)/save.o \
	$(OBJDIR)/scores.o \
	$(OBJDIR)/spells1.o \
	$(OBJDIR)/spells2.o \
	$(OBJDIR)/spells3.o \
	$(OBJDIR)/store.o \
	$(OBJDIR)/streams.o \
	$(OBJDIR)/tables.o \
	$(OBJDIR)/util.o \
	$(OBJDIR)/variable.o \
	$(OBJDIR)/wild.o \
	$(OBJDIR)/wizard1.o \
	$(OBJDIR)/wizard2.o \
	$(OBJDIR)/xtra1.o \
	$(OBJDIR)/xtra2.o \
	$(OBJDIR)/z-form.o \
	$(OBJDIR)/z-rand.o \
	$(OBJDIR)/z-term.o \
	$(OBJDIR)/z-util.o \
	$(OBJDIR)/z-virt.o

# Readdib doesn't compile (hence no use of graphics)
#       $(OBJDIR)/readdib.o


HDRS		= \
	$(SRCDIR)/h-basic.h \
	$(SRCDIR)/h-define.h $(SRCDIR)/h-type.h \
	$(SRCDIR)/h-system.h $(SRCDIR)/h-config.h


INCS		= \
	$(SRCDIR)/angband.h \
	$(SRCDIR)/z-config.h $(SRCDIR)/defines.h \
	$(SRCDIR)/types.h $(SRCDIR)/externs.h \
	$(SRCDIR)/z-term.h $(SRCDIR)/z-rand.h \
	$(SRCDIR)/z-util.h $(SRCDIR)/z-virt.h \
	$(SRCDIR)/z-form.h $(HDRS)


ALLOBJS	=	$(EXOBJS)
ALLBIN	=	$(BINDIR)/zangband
ALLTGT	=	$(BINDIR)/zangband


#
# Targets
#

all:		$(ALLTGT)

objs:		$(ALLOBJS)

cleanobjs:
		rm -f $(ALLOBJS)

cleanbin:
		rm -f $(ALLBIN)

clean:	cleanobjs cleanbin



#
# Dependency rules
#


$(BINDIR)/zangband: $(EXOBJS)
	$(CC) -o $(BINDIR)/zangband $(EXOBJS) $(INCDIRS) $(LIBDIRS) $(LIBS)

#
# Compiling angband.rc
#
# Note: this format seems to work but the alternative actually used
# is the one recommended by Cygnus
#
# $(OBJDIR)/angband.res : $(SRCDIR)/angband.rc
#       $(WRES) $(SRCDIR)/angband.rc $(OBJDIR)/angband.res
#

$(OBJDIR)/angband.res : $(SRCDIR)/angband.rc
	$(WRES) $< -O coff -o $@

#
# Compiling objects
#

$(OBJDIR)/artifact.o: $(SRCDIR)/artifact.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/avatar.o: $(SRCDIR)/avatar.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/bldg.o: $(SRCDIR)/bldg.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/birth.o: $(SRCDIR)/birth.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/cave.o: $(SRCDIR)/cave.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/cmd1.o: $(SRCDIR)/cmd1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/cmd2.o: $(SRCDIR)/cmd2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/cmd3.o: $(SRCDIR)/cmd3.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/cmd4.o: $(SRCDIR)/cmd4.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/cmd5.o: $(SRCDIR)/cmd5.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/cmd6.o: $(SRCDIR)/cmd6.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/dungeon.o: $(SRCDIR)/dungeon.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/effects.o: $(SRCDIR)/effects.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/files.o: $(SRCDIR)/files.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/flavor.o: $(SRCDIR)/flavor.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/generate.o: $(SRCDIR)/generate.c $(INCS) generate.h grid.h rooms.h streams.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/grid.o: $(SRCDIR)/grid.c $(INCS) grid.h generate.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/init1.o: $(SRCDIR)/init1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/init2.o: $(SRCDIR)/init2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/load.o: $(SRCDIR)/load.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/main.o: $(SRCDIR)/main.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/melee1.o: $(SRCDIR)/melee1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/main-win.o: $(SRCDIR)/main-win.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/melee2.o: $(SRCDIR)/melee2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/mind.o: $(SRCDIR)/mind.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/monster1.o: $(SRCDIR)/monster1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/monster2.o: $(SRCDIR)/monster2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/mspells1.o: $(SRCDIR)/mspells1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/mspells2.o: $(SRCDIR)/mspells2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/mutation.o: $(SRCDIR)/mutation.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/object1.o: $(SRCDIR)/object1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/object2.o: $(SRCDIR)/object2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/obj_kind.o: $(SRCDIR)/obj_kind.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/racial.o: $(SRCDIR)/racial.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/rooms.o: $(SRCDIR)/rooms.c $(INCS) grid.h rooms.h generate.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/save.o: $(SRCDIR)/save.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/scores.o: $(SRCDIR)/scores.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/spells1.o: $(SRCDIR)/spells1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/spells2.o: $(SRCDIR)/spells2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/spells3.o: $(SRCDIR)/spells3.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/store.o: $(SRCDIR)/store.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/streams.o: $(SRCDIR)/streams.c $(INCS) grid.h generate.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/tables.o: $(SRCDIR)/tables.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/util.o: $(SRCDIR)/util.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/variable.o: $(SRCDIR)/variable.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/wild.o: $(SRCDIR)/wild.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/wizard1.o: $(SRCDIR)/wizard1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/wizard2.o: $(SRCDIR)/wizard2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/xtra1.o: $(SRCDIR)/xtra1.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/xtra2.o: $(SRCDIR)/xtra2.c $(INCS)
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/z-form.o: $(SRCDIR)/z-form.c $(HDRS) z-form.h z-util.h z-virt.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/z-rand.o: $(SRCDIR)/z-rand.c $(HDRS) z-rand.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/z-term.o: $(SRCDIR)/z-term.c $(HDRS) z-term.h z-virt.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/z-util.o: $(SRCDIR)/z-util.c $(HDRS) z-util.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

$(OBJDIR)/z-virt.o: $(SRCDIR)/z-virt.c $(HDRS) z-virt.h z-util.h
	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<

# Readdib not compiled
# $(OBJDIR)/readdib.o: $(SRCDIR)/readdib.c $(INCS) readdib.h
#	$(CC) $(CFLAGS) $(INCDIRS) -c -o $@ $<
