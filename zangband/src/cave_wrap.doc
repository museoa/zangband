D:\z-2.3\src\cave_wrap.c

[ Python Module : cave ]


BLOCK_HGT = 11
        [ Constant: int  ]
        * Number of grids in each block (horizontally) * Probably hard-coded
        to 11, see "generate.c" 

BLOCK_WID = 11
        [ Constant: int  ]

PANEL_HGT = 11
        [ Constant: int  ]
        * Number of grids in each panel (horizontally) * Must be a multiple
        of BLOCK_WID 

PANEL_WID = 33
        [ Constant: int  ]

SCREEN_HGT = 22
        [ Constant: int  ]
        * Number of grids used to display the dungeon (horizontally). *
        Must be a multiple of 33, probably hard-coded to 66. 

SCREEN_WID = 66
        [ Constant: int  ]

MAX_HGT = 66
        [ Constant: int  ]
        * Maximum dungeon width in grids, must be a multiple of SCREEN_WID,
        * probably hard-coded to SCREEN_WID * 3. 

MAX_WID = 198
        [ Constant: int  ]

load_layout(name)
        [ returns errr  ]

set_feat(y,x,feat)
        [ returns void  ]

1.  class cave_type
===================
[ created from struct cave_type ]


self.info
        [ Member data: returns byte  ]
        Hack -- cave flags 

self.feat
        [ Member data: returns byte  ]
        Hack -- feature type 

self.o_idx
        [ Member data: returns s16b  ]
        Object in this grid 

self.m_idx
        [ Member data: returns s16b  ]
        Monster in this grid 

self.special
        [ Member data: returns s16b  ]
        Special cave info 

self.mimic
        [ Member data: returns byte  ]
        Feature to mimic 

----------

tile(y,x)
        [ returns cave_type * ]

cvar.object_level
        [ Global : s16b object_level ]
        Current object creation level 

cvar.monster_level
        [ Global : s16b monster_level ]
        Current monster creation level 

cvar.base_level
        [ Global : s16b base_level ]
        Base dungeon level 

cvar.dun_level
        [ Global : s16b dun_level ]
        Base dungeon level 

2.  class vault_type
====================
[ created from struct vault_type ]


self.name
        [ Member data: returns u32b  ]
        Name (offset) 

self.text
        [ Member data: returns u32b  ]
        Text (offset) 

self.typ
        [ Member data: returns byte  ]
        Vault type 

self.rat
        [ Member data: returns byte  ]
        Vault rating 

self.hgt
        [ Member data: returns byte  ]
        Vault height 

self.wid
        [ Member data: returns byte  ]
        Vault width 

----------

generate_wilderness_area(terrain,seed,border,corner)
        [ returns void  ]

