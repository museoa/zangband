.\src\objects_wrap.c

[ Python Module : objects ]


1.  class object_kind
=====================
[ created from struct object_kind ]


self.name
        [ Member data: returns u32b  ]
        Name (offset) 

self.text
        [ Member data: returns u32b  ]
        Text (offset) 

self.tval
        [ Member data: returns byte  ]
        Object type 

self.sval
        [ Member data: returns byte  ]
        Object sub type 

self.pval
        [ Member data: returns s16b  ]
        Object extra info 

self.to_h
        [ Member data: returns s16b  ]
        Bonus to hit 

self.to_d
        [ Member data: returns s16b  ]
        Bonus to damage 

self.to_a
        [ Member data: returns s16b  ]
        Bonus to armor 

self.ac
        [ Member data: returns s16b  ]
        Base armor 

self.dd
        [ Member data: returns byte  ]

self.ds
        [ Member data: returns byte  ]
        Damage dice/sides 

self.weight
        [ Member data: returns s16b  ]
        Weight 

self.cost
        [ Member data: returns s32b  ]
        Object "base cost" 

self.flags1
        [ Member data: returns u32b  ]
        Flags, set 1 

self.flags2
        [ Member data: returns u32b  ]
        Flags, set 2 

self.flags3
        [ Member data: returns u32b  ]
        Flags, set 3 

self.locale
        [ Member data: returns byte * ]
        Allocation level(s) 

self.chance
        [ Member data: returns byte * ]
        Allocation chance(s) 

self.level
        [ Member data: returns byte  ]
        Level 

self.extra
        [ Member data: returns byte  ]
        Something 

self.d_attr
        [ Member data: returns byte  ]
        Default object attribute 

self.d_char
        [ Member data: returns char  ]
        Default object character 

self.x_attr
        [ Member data: returns byte  ]
        Desired object attribute 

self.x_char
        [ Member data: returns char  ]
        Desired object character 

self.flavor
        [ Member data: returns byte  ]
        Special object flavor (or zero) 

self.easy_know
        [ Member data: returns bool  ]
        This object is always known (if aware) 

self.aware
        [ Member data: returns bool  ]
        The player is "aware" of the item's effects 

self.tried
        [ Member data: returns bool  ]
        The player has "tried" one of the items 

2.  class object_type
=====================
[ created from struct object_type ]


self.k_idx
        [ Member data: returns s16b  ]
        Kind index (zero if "dead") 

self.iy
        [ Member data: returns byte  ]
        Y-position on map, or zero 

self.ix
        [ Member data: returns byte  ]
        X-position on map, or zero 

self.tval
        [ Member data: returns byte  ]
        Item type (from kind) 

self.sval
        [ Member data: returns byte  ]
        Item sub-type (from kind) 

self.pval
        [ Member data: returns s16b  ]
        Item extra-parameter 

self.discount
        [ Member data: returns byte  ]
        Discount (if any) 

self.number
        [ Member data: returns byte  ]
        Number of items 

self.weight
        [ Member data: returns s16b  ]
        Item weight 

self.name1
        [ Member data: returns byte  ]
        Artifact type, if any 

self.name2
        [ Member data: returns byte  ]
        Ego-Item type, if any 

self.xtra1
        [ Member data: returns byte  ]
        Extra info type 

self.xtra2
        [ Member data: returns byte  ]
        Extra info index 

self.to_h
        [ Member data: returns s16b  ]
        Plusses to hit 

self.to_d
        [ Member data: returns s16b  ]
        Plusses to damage 

self.to_a
        [ Member data: returns s16b  ]
        Plusses to AC 

self.ac
        [ Member data: returns s16b  ]
        Normal AC 

self.dd
        [ Member data: returns byte  ]

self.ds
        [ Member data: returns byte  ]
        Damage dice/sides 

self.timeout
        [ Member data: returns s16b  ]
        Timeout Counter 

self.ident
        [ Member data: returns byte  ]
        Special flags 

self.marked
        [ Member data: returns byte  ]
        Object is marked 

self.inscription
        [ Member data: returns u16b  ]
        Inscription index 

self.art_name
        [ Member data: returns u16b  ]
        Artifact name (random artifacts) 

self.art_flags1
        [ Member data: returns u32b  ]
        Flags, set 1 Alas, these were necessary 

self.art_flags2
        [ Member data: returns u32b  ]
        Flags, set 2 for the random artifacts of 

self.art_flags3
        [ Member data: returns u32b  ]
        Flags, set 3 Zangband 

self.next_o_idx
        [ Member data: returns s16b  ]
        Next object in stack (if any) 

self.held_m_idx
        [ Member data: returns s16b  ]
        Monster holding us (if any) 

object_type()
        [ Constructor: returns object_type * ]

del this
        [ Destructor: returns void  ]

object_wipe()
        [ Member : returns void  ]

object_copy(j_ptr)
        [ Member : returns void  ]

object_prep(k_idx)
        [ Member : returns void  ]

drop_near(chance,y,x)
        [ Member : returns s16b  ]

activation()
        [ Member : returns char * ]

identify_fully_aux()
        [ Member : returns bool  ]

object_known()
        [ Member : returns void  ]

object_aware()
        [ Member : returns void  ]

set_python(python)
        [ Member : returns void  ]

----------

TV_SKELETON = 1
        [ Constant: int  ]

TV_BOTTLE = 2
        [ Constant: int  ]

TV_JUNK = 3
        [ Constant: int  ]

TV_SPIKE = 5
        [ Constant: int  ]

TV_CHEST = 7
        [ Constant: int  ]

TV_SHOT = 16
        [ Constant: int  ]

TV_ARROW = 17
        [ Constant: int  ]

TV_BOLT = 18
        [ Constant: int  ]

TV_BOW = 19
        [ Constant: int  ]

TV_DIGGING = 20
        [ Constant: int  ]

TV_HAFTED = 21
        [ Constant: int  ]

TV_POLEARM = 22
        [ Constant: int  ]

TV_SWORD = 23
        [ Constant: int  ]

TV_BOOTS = 30
        [ Constant: int  ]

TV_GLOVES = 31
        [ Constant: int  ]

TV_HELM = 32
        [ Constant: int  ]

TV_CROWN = 33
        [ Constant: int  ]

TV_SHIELD = 34
        [ Constant: int  ]

TV_CLOAK = 35
        [ Constant: int  ]

TV_SOFT_ARMOR = 36
        [ Constant: int  ]

TV_HARD_ARMOR = 37
        [ Constant: int  ]

TV_DRAG_ARMOR = 38
        [ Constant: int  ]

TV_LITE = 39
        [ Constant: int  ]

TV_AMULET = 40
        [ Constant: int  ]

TV_RING = 45
        [ Constant: int  ]

TV_STAFF = 55
        [ Constant: int  ]

TV_WAND = 65
        [ Constant: int  ]

TV_ROD = 66
        [ Constant: int  ]

TV_SCROLL = 70
        [ Constant: int  ]

TV_POTION = 75
        [ Constant: int  ]

TV_FLASK = 77
        [ Constant: int  ]

TV_FOOD = 80
        [ Constant: int  ]

TV_LIFE_BOOK = 90
        [ Constant: int  ]

TV_SORCERY_BOOK = 91
        [ Constant: int  ]

TV_NATURE_BOOK = 92
        [ Constant: int  ]

TV_CHAOS_BOOK = 93
        [ Constant: int  ]

TV_DEATH_BOOK = 94
        [ Constant: int  ]

TV_TRUMP_BOOK = 95
        [ Constant: int  ]

TV_ARCANE_BOOK = 96
        [ Constant: int  ]
        Gold can only be picked up by players 

TV_GOLD = 100
        [ Constant: int  ]

SV_AMMO_LIGHT = 0
        [ Constant: int  ]

SV_AMMO_NORMAL = 1
        [ Constant: int  ]

SV_AMMO_HEAVY = 2
        [ Constant: int  ]
        The "sval" codes for TV_BOW (note information in "sval") 

SV_SLING = 2
        [ Constant: int  ]

SV_SHORT_BOW = 12
        [ Constant: int  ]

SV_LONG_BOW = 13
        [ Constant: int  ]

SV_LIGHT_XBOW = 23
        [ Constant: int  ]

SV_HEAVY_XBOW = 24
        [ Constant: int  ]
        The "sval" codes for TV_DIGGING 

SV_SHOVEL = 1
        [ Constant: int  ]

SV_GNOMISH_SHOVEL = 2
        [ Constant: int  ]

SV_DWARVEN_SHOVEL = 3
        [ Constant: int  ]

SV_PICK = 4
        [ Constant: int  ]

SV_ORCISH_PICK = 5
        [ Constant: int  ]

SV_DWARVEN_PICK = 6
        [ Constant: int  ]

SV_MATTOCK = 7
        [ Constant: int  ]
        The "sval" values for TV_HAFTED 

SV_CLUB = 1
        [ Constant: int  ]

SV_WHIP = 2
        [ Constant: int  ]

SV_QUARTERSTAFF = 3
        [ Constant: int  ]

SV_NUNCHAKU = 4
        [ Constant: int  ]

SV_MACE = 5
        [ Constant: int  ]

SV_BALL_AND_CHAIN = 6
        [ Constant: int  ]

SV_JO_STAFF = 7
        [ Constant: int  ]

SV_WAR_HAMMER = 8
        [ Constant: int  ]

SV_LUCERN_HAMMER = 10
        [ Constant: int  ]

SV_THREE_PIECE_ROD = 11
        [ Constant: int  ]

SV_MORNING_STAR = 12
        [ Constant: int  ]

SV_FLAIL = 13
        [ Constant: int  ]

SV_BO_STAFF = 14
        [ Constant: int  ]

SV_LEAD_FILLED_MACE = 15
        [ Constant: int  ]

SV_TETSUBO = 16
        [ Constant: int  ]

SV_TWO_HANDED_FLAIL = 18
        [ Constant: int  ]

SV_GREAT_HAMMER = 19
        [ Constant: int  ]

SV_MACE_OF_DISRUPTION = 20
        [ Constant: int  ]

SV_GROND = 50
        [ Constant: int  ]
        The "sval" values for TV_POLEARM 

SV_HATCHET = 1
        [ Constant: int  ]

SV_SPEAR = 2
        [ Constant: int  ]

SV_SICKLE = 3
        [ Constant: int  ]

SV_AWL_PIKE = 4
        [ Constant: int  ]

SV_TRIDENT = 5
        [ Constant: int  ]
        1d10 

SV_FAUCHARD = 6
        [ Constant: int  ]
        1d9 

SV_BROAD_SPEAR = 7
        [ Constant: int  ]
        2d5 

SV_PIKE = 8
        [ Constant: int  ]
        2d6 

SV_NAGINATA = 9
        [ Constant: int  ]
        2d6 

SV_BEAKED_AXE = 10
        [ Constant: int  ]
        2d6 

SV_BROAD_AXE = 11
        [ Constant: int  ]
        2d6 

SV_GLAIVE = 13
        [ Constant: int  ]
        2d7 

SV_LAJATANG = 14
        [ Constant: int  ]
        3d4 

SV_HALBERD = 15
        [ Constant: int  ]
        2d5 

SV_GUISARME = 16
        [ Constant: int  ]
        5d3 

SV_SCYTHE = 17
        [ Constant: int  ]
        2d8 

SV_LANCE = 20
        [ Constant: int  ]
        2d8 

SV_BATTLE_AXE = 22
        [ Constant: int  ]
        4d4 

SV_GREAT_AXE = 25
        [ Constant: int  ]
        2d9 

SV_TRIFURCATE_SPEAR = 26
        [ Constant: int  ]
        3d8 

SV_LOCHABER_AXE = 28
        [ Constant: int  ]
        4d8 

SV_HEAVY_LANCE = 29
        [ Constant: int  ]
        8d4 

SV_SCYTHE_OF_SLICING = 30
        [ Constant: int  ]
        The "sval" codes for TV_SWORD 

SV_BROKEN_DAGGER = 1
        [ Constant: int  ]

SV_BROKEN_SWORD = 2
        [ Constant: int  ]

SV_DAGGER = 4
        [ Constant: int  ]

SV_MAIN_GAUCHE = 5
        [ Constant: int  ]

SV_TANTO = 6
        [ Constant: int  ]

SV_RAPIER = 7
        [ Constant: int  ]

SV_SMALL_SWORD = 8
        [ Constant: int  ]

SV_BASILLARD = 9
        [ Constant: int  ]

SV_SHORT_SWORD = 10
        [ Constant: int  ]

SV_SABRE = 11
        [ Constant: int  ]

SV_CUTLASS = 12
        [ Constant: int  ]

SV_WAKIZASHI = 13
        [ Constant: int  ]

SV_KHOPESH = 14
        [ Constant: int  ]

SV_TULWAR = 15
        [ Constant: int  ]

SV_BROAD_SWORD = 16
        [ Constant: int  ]

SV_LONG_SWORD = 17
        [ Constant: int  ]

SV_SCIMITAR = 18
        [ Constant: int  ]

SV_NINJATO = 19
        [ Constant: int  ]

SV_KATANA = 20
        [ Constant: int  ]

SV_BASTARD_SWORD = 21
        [ Constant: int  ]

SV_GREAT_SCIMITAR = 22
        [ Constant: int  ]

SV_CLAYMORE = 23
        [ Constant: int  ]

SV_ESPADON = 24
        [ Constant: int  ]

SV_TWO_HANDED_SWORD = 25
        [ Constant: int  ]

SV_FLAMBERGE = 26
        [ Constant: int  ]

SV_NO_DACHI = 27
        [ Constant: int  ]

SV_EXECUTIONERS_SWORD = 28
        [ Constant: int  ]

SV_ZWEIHANDER = 29
        [ Constant: int  ]

SV_BLADE_OF_CHAOS = 30
        [ Constant: int  ]
        The "sval" codes for TV_SHIELD 

SV_SMALL_LEATHER_SHIELD = 2
        [ Constant: int  ]

SV_SMALL_METAL_SHIELD = 3
        [ Constant: int  ]

SV_LARGE_LEATHER_SHIELD = 4
        [ Constant: int  ]

SV_LARGE_METAL_SHIELD = 5
        [ Constant: int  ]

SV_DRAGON_SHIELD = 6
        [ Constant: int  ]

SV_SHIELD_OF_DEFLECTION = 10
        [ Constant: int  ]
        The "sval" codes for TV_HELM 

SV_HARD_LEATHER_CAP = 2
        [ Constant: int  ]

SV_METAL_CAP = 3
        [ Constant: int  ]
        4 

SV_JINGASA = 4
        [ Constant: int  ]

SV_IRON_HELM = 5
        [ Constant: int  ]

SV_STEEL_HELM = 6
        [ Constant: int  ]

SV_DRAGON_HELM = 7
        [ Constant: int  ]
        7 

SV_KABUTO = 8
        [ Constant: int  ]

SV_IRON_CROWN = 10
        [ Constant: int  ]

SV_GOLDEN_CROWN = 11
        [ Constant: int  ]

SV_JEWELED_CROWN = 12
        [ Constant: int  ]

SV_MORGOTH = 50
        [ Constant: int  ]
        The "sval" codes for TV_BOOTS 

SV_PAIR_OF_SOFT_LEATHER_BOOTS = 2
        [ Constant: int  ]

SV_PAIR_OF_HARD_LEATHER_BOOTS = 3
        [ Constant: int  ]

SV_PAIR_OF_METAL_SHOD_BOOTS = 6
        [ Constant: int  ]
        The "sval" codes for TV_CLOAK 

SV_CLOAK = 1
        [ Constant: int  ]

SV_ELVEN_CLOAK = 2
        [ Constant: int  ]

SV_FUR_CLOAK = 3
        [ Constant: int  ]

SV_SHADOW_CLOAK = 6
        [ Constant: int  ]
        The "sval" codes for TV_GLOVES 

SV_SET_OF_LEATHER_GLOVES = 1
        [ Constant: int  ]

SV_SET_OF_GAUNTLETS = 2
        [ Constant: int  ]

SV_SET_OF_CESTI = 5
        [ Constant: int  ]
        The "sval" codes for TV_SOFT_ARMOR 

SV_FILTHY_RAG = 1
        [ Constant: int  ]

SV_ROBE = 2
        [ Constant: int  ]
        4 

SV_PAPER_ARMOR = 3
        [ Constant: int  ]

SV_SOFT_LEATHER_ARMOR = 4
        [ Constant: int  ]

SV_SOFT_STUDDED_LEATHER = 5
        [ Constant: int  ]

SV_HARD_LEATHER_ARMOR = 6
        [ Constant: int  ]

SV_HARD_STUDDED_LEATHER = 7
        [ Constant: int  ]

SV_RHINO_HIDE_ARMOR = 8
        [ Constant: int  ]
        6 

SV_CORD_ARMOR = 9
        [ Constant: int  ]
        4 

SV_PADDED_ARMOR = 10
        [ Constant: int  ]

SV_LEATHER_SCALE_MAIL = 11
        [ Constant: int  ]

SV_LEATHER_JACK = 12
        [ Constant: int  ]
        15 

SV_STONE_AND_HIDE_ARMOR = 15
        [ Constant: int  ]
        The "sval" codes for TV_HARD_ARMOR 

SV_RUSTY_CHAIN_MAIL = 1
        [ Constant: int  ]

SV_RING_MAIL = 2
        [ Constant: int  ]

SV_METAL_SCALE_MAIL = 3
        [ Constant: int  ]

SV_CHAIN_MAIL = 4
        [ Constant: int  ]

SV_DOUBLE_RING_MAIL = 5
        [ Constant: int  ]

SV_AUGMENTED_CHAIN_MAIL = 6
        [ Constant: int  ]

SV_DOUBLE_CHAIN_MAIL = 7
        [ Constant: int  ]

SV_BAR_CHAIN_MAIL = 8
        [ Constant: int  ]

SV_METAL_BRIGANDINE_ARMOUR = 9
        [ Constant: int  ]

SV_SPLINT_MAIL = 10
        [ Constant: int  ]

SV_DO_MARU = 11
        [ Constant: int  ]

SV_PARTIAL_PLATE_ARMOUR = 12
        [ Constant: int  ]

SV_METAL_LAMELLAR_ARMOUR = 13
        [ Constant: int  ]

SV_HARAMAKIDO = 14
        [ Constant: int  ]

SV_FULL_PLATE_ARMOUR = 15
        [ Constant: int  ]

SV_O_YOROI = 16
        [ Constant: int  ]

SV_RIBBED_PLATE_ARMOUR = 18
        [ Constant: int  ]

SV_MITHRIL_CHAIN_MAIL = 20
        [ Constant: int  ]

SV_MITHRIL_PLATE_MAIL = 25
        [ Constant: int  ]

SV_ADAMANTITE_PLATE_MAIL = 30
        [ Constant: int  ]
        The "sval" codes for TV_DRAG_ARMOR 

SV_DRAGON_BLACK = 1
        [ Constant: int  ]

SV_DRAGON_BLUE = 2
        [ Constant: int  ]

SV_DRAGON_WHITE = 3
        [ Constant: int  ]

SV_DRAGON_RED = 4
        [ Constant: int  ]

SV_DRAGON_GREEN = 5
        [ Constant: int  ]

SV_DRAGON_MULTIHUED = 6
        [ Constant: int  ]

SV_DRAGON_SHINING = 10
        [ Constant: int  ]

SV_DRAGON_LAW = 12
        [ Constant: int  ]

SV_DRAGON_BRONZE = 14
        [ Constant: int  ]

SV_DRAGON_GOLD = 16
        [ Constant: int  ]

SV_DRAGON_CHAOS = 18
        [ Constant: int  ]

SV_DRAGON_BALANCE = 20
        [ Constant: int  ]

SV_DRAGON_POWER = 30
        [ Constant: int  ]
        The sval codes for TV_LITE 

SV_LITE_TORCH = 0
        [ Constant: int  ]

SV_LITE_LANTERN = 1
        [ Constant: int  ]

SV_LITE_GALADRIEL = 4
        [ Constant: int  ]

SV_LITE_ELENDIL = 5
        [ Constant: int  ]

SV_LITE_THRAIN = 6
        [ Constant: int  ]
        The "sval" codes for TV_AMULET 

SV_AMULET_DOOM = 0
        [ Constant: int  ]

SV_AMULET_TELEPORT = 1
        [ Constant: int  ]

SV_AMULET_ADORNMENT = 2
        [ Constant: int  ]

SV_AMULET_SLOW_DIGEST = 3
        [ Constant: int  ]

SV_AMULET_RESIST_ACID = 4
        [ Constant: int  ]

SV_AMULET_SEARCHING = 5
        [ Constant: int  ]

SV_AMULET_WISDOM = 6
        [ Constant: int  ]

SV_AMULET_CHARISMA = 7
        [ Constant: int  ]

SV_AMULET_THE_MAGI = 8
        [ Constant: int  ]

SV_AMULET_REFLECTION = 9
        [ Constant: int  ]

SV_AMULET_CARLAMMAS = 10
        [ Constant: int  ]

SV_AMULET_INGWE = 11
        [ Constant: int  ]

SV_AMULET_DWARVES = 12
        [ Constant: int  ]

SV_AMULET_NO_MAGIC = 13
        [ Constant: int  ]

SV_AMULET_NO_TELE = 14
        [ Constant: int  ]

SV_AMULET_RESISTANCE = 15
        [ Constant: int  ]
        The sval codes for TV_RING 

SV_RING_WOE = 0
        [ Constant: int  ]

SV_RING_AGGRAVATION = 1
        [ Constant: int  ]

SV_RING_WEAKNESS = 2
        [ Constant: int  ]

SV_RING_STUPIDITY = 3
        [ Constant: int  ]

SV_RING_TELEPORTATION = 4
        [ Constant: int  ]

SV_RING_SLOW_DIGESTION = 6
        [ Constant: int  ]

SV_RING_FEATHER_FALL = 7
        [ Constant: int  ]

SV_RING_RESIST_FIRE = 8
        [ Constant: int  ]

SV_RING_RESIST_COLD = 9
        [ Constant: int  ]

SV_RING_SUSTAIN_STR = 10
        [ Constant: int  ]

SV_RING_SUSTAIN_INT = 11
        [ Constant: int  ]

SV_RING_SUSTAIN_WIS = 12
        [ Constant: int  ]

SV_RING_SUSTAIN_DEX = 13
        [ Constant: int  ]

SV_RING_SUSTAIN_CON = 14
        [ Constant: int  ]

SV_RING_SUSTAIN_CHR = 15
        [ Constant: int  ]

SV_RING_PROTECTION = 16
        [ Constant: int  ]

SV_RING_ACID = 17
        [ Constant: int  ]

SV_RING_FLAMES = 18
        [ Constant: int  ]

SV_RING_ICE = 19
        [ Constant: int  ]

SV_RING_RESIST_POIS = 20
        [ Constant: int  ]

SV_RING_FREE_ACTION = 21
        [ Constant: int  ]

SV_RING_SEE_INVIS = 22
        [ Constant: int  ]

SV_RING_SEARCHING = 23
        [ Constant: int  ]

SV_RING_STR = 24
        [ Constant: int  ]

SV_RING_INT = 25
        [ Constant: int  ]

SV_RING_DEX = 26
        [ Constant: int  ]

SV_RING_CON = 27
        [ Constant: int  ]

SV_RING_ACCURACY = 28
        [ Constant: int  ]

SV_RING_DAMAGE = 29
        [ Constant: int  ]

SV_RING_SLAYING = 30
        [ Constant: int  ]

SV_RING_SPEED = 31
        [ Constant: int  ]

SV_RING_BARAHIR = 32
        [ Constant: int  ]

SV_RING_TULKAS = 33
        [ Constant: int  ]

SV_RING_NARYA = 34
        [ Constant: int  ]

SV_RING_NENYA = 35
        [ Constant: int  ]

SV_RING_VILYA = 36
        [ Constant: int  ]

SV_RING_POWER = 37
        [ Constant: int  ]

SV_RING_RES_FEAR = 38
        [ Constant: int  ]

SV_RING_RES_LD = 39
        [ Constant: int  ]

SV_RING_RES_NETHER = 40
        [ Constant: int  ]

SV_RING_RES_NEXUS = 41
        [ Constant: int  ]

SV_RING_RES_SOUND = 42
        [ Constant: int  ]

SV_RING_RES_CONFUSION = 43
        [ Constant: int  ]

SV_RING_RES_SHARDS = 44
        [ Constant: int  ]

SV_RING_RES_DISENCHANT = 45
        [ Constant: int  ]

SV_RING_RES_CHAOS = 46
        [ Constant: int  ]

SV_RING_RES_BLINDNESS = 47
        [ Constant: int  ]

SV_RING_LORDLY = 48
        [ Constant: int  ]

SV_RING_ATTACKS = 49
        [ Constant: int  ]
        The "sval" codes for TV_STAFF 

SV_STAFF_DARKNESS = 0
        [ Constant: int  ]

SV_STAFF_SLOWNESS = 1
        [ Constant: int  ]

SV_STAFF_HASTE_MONSTERS = 2
        [ Constant: int  ]

SV_STAFF_SUMMONING = 3
        [ Constant: int  ]

SV_STAFF_TELEPORTATION = 4
        [ Constant: int  ]

SV_STAFF_IDENTIFY = 5
        [ Constant: int  ]

SV_STAFF_REMOVE_CURSE = 6
        [ Constant: int  ]

SV_STAFF_STARLITE = 7
        [ Constant: int  ]

SV_STAFF_LITE = 8
        [ Constant: int  ]

SV_STAFF_MAPPING = 9
        [ Constant: int  ]

SV_STAFF_DETECT_GOLD = 10
        [ Constant: int  ]

SV_STAFF_DETECT_ITEM = 11
        [ Constant: int  ]

SV_STAFF_DETECT_TRAP = 12
        [ Constant: int  ]

SV_STAFF_DETECT_DOOR = 13
        [ Constant: int  ]

SV_STAFF_DETECT_INVIS = 14
        [ Constant: int  ]

SV_STAFF_DETECT_EVIL = 15
        [ Constant: int  ]

SV_STAFF_CURE_LIGHT = 16
        [ Constant: int  ]

SV_STAFF_CURING = 17
        [ Constant: int  ]

SV_STAFF_HEALING = 18
        [ Constant: int  ]

SV_STAFF_THE_MAGI = 19
        [ Constant: int  ]

SV_STAFF_SLEEP_MONSTERS = 20
        [ Constant: int  ]

SV_STAFF_SLOW_MONSTERS = 21
        [ Constant: int  ]

SV_STAFF_SPEED = 22
        [ Constant: int  ]

SV_STAFF_PROBING = 23
        [ Constant: int  ]

SV_STAFF_DISPEL_EVIL = 24
        [ Constant: int  ]

SV_STAFF_POWER = 25
        [ Constant: int  ]

SV_STAFF_HOLINESS = 26
        [ Constant: int  ]

SV_STAFF_GENOCIDE = 27
        [ Constant: int  ]

SV_STAFF_EARTHQUAKES = 28
        [ Constant: int  ]

SV_STAFF_DESTRUCTION = 29
        [ Constant: int  ]

SV_WAND_HEAL_MONSTER = 0
        [ Constant: int  ]

SV_WAND_HASTE_MONSTER = 1
        [ Constant: int  ]

SV_WAND_CLONE_MONSTER = 2
        [ Constant: int  ]

SV_WAND_TELEPORT_AWAY = 3
        [ Constant: int  ]

SV_WAND_DISARMING = 4
        [ Constant: int  ]

SV_WAND_TRAP_DOOR_DEST = 5
        [ Constant: int  ]

SV_WAND_STONE_TO_MUD = 6
        [ Constant: int  ]

SV_WAND_LITE = 7
        [ Constant: int  ]

SV_WAND_SLEEP_MONSTER = 8
        [ Constant: int  ]

SV_WAND_SLOW_MONSTER = 9
        [ Constant: int  ]

SV_WAND_CONFUSE_MONSTER = 10
        [ Constant: int  ]

SV_WAND_FEAR_MONSTER = 11
        [ Constant: int  ]

SV_WAND_DRAIN_LIFE = 12
        [ Constant: int  ]

SV_WAND_POLYMORPH = 13
        [ Constant: int  ]

SV_WAND_STINKING_CLOUD = 14
        [ Constant: int  ]

SV_WAND_MAGIC_MISSILE = 15
        [ Constant: int  ]

SV_WAND_ACID_BOLT = 16
        [ Constant: int  ]

SV_WAND_CHARM_MONSTER = 17
        [ Constant: int  ]

SV_WAND_FIRE_BOLT = 18
        [ Constant: int  ]

SV_WAND_COLD_BOLT = 19
        [ Constant: int  ]

SV_WAND_ACID_BALL = 20
        [ Constant: int  ]

SV_WAND_ELEC_BALL = 21
        [ Constant: int  ]

SV_WAND_FIRE_BALL = 22
        [ Constant: int  ]

SV_WAND_COLD_BALL = 23
        [ Constant: int  ]

SV_WAND_WONDER = 24
        [ Constant: int  ]

SV_WAND_ANNIHILATION = 25
        [ Constant: int  ]

SV_WAND_DRAGON_FIRE = 26
        [ Constant: int  ]

SV_WAND_DRAGON_COLD = 27
        [ Constant: int  ]

SV_WAND_DRAGON_BREATH = 28
        [ Constant: int  ]

SV_WAND_ROCKETS = 29
        [ Constant: int  ]
        The "sval" codes for TV_ROD 

SV_ROD_DETECT_TRAP = 0
        [ Constant: int  ]

SV_ROD_DETECT_DOOR = 1
        [ Constant: int  ]

SV_ROD_IDENTIFY = 2
        [ Constant: int  ]

SV_ROD_RECALL = 3
        [ Constant: int  ]

SV_ROD_ILLUMINATION = 4
        [ Constant: int  ]

SV_ROD_MAPPING = 5
        [ Constant: int  ]

SV_ROD_DETECTION = 6
        [ Constant: int  ]

SV_ROD_PROBING = 7
        [ Constant: int  ]

SV_ROD_CURING = 8
        [ Constant: int  ]

SV_ROD_HEALING = 9
        [ Constant: int  ]

SV_ROD_RESTORATION = 10
        [ Constant: int  ]

SV_ROD_SPEED = 11
        [ Constant: int  ]

SV_ROD_PESTICIDE = 12
        [ Constant: int  ]

SV_ROD_TELEPORT_AWAY = 13
        [ Constant: int  ]

SV_ROD_DISARMING = 14
        [ Constant: int  ]

SV_ROD_LITE = 15
        [ Constant: int  ]

SV_ROD_SLEEP_MONSTER = 16
        [ Constant: int  ]

SV_ROD_SLOW_MONSTER = 17
        [ Constant: int  ]

SV_ROD_DRAIN_LIFE = 18
        [ Constant: int  ]

SV_ROD_POLYMORPH = 19
        [ Constant: int  ]

SV_ROD_ACID_BOLT = 20
        [ Constant: int  ]

SV_ROD_ELEC_BOLT = 21
        [ Constant: int  ]

SV_ROD_FIRE_BOLT = 22
        [ Constant: int  ]

SV_ROD_COLD_BOLT = 23
        [ Constant: int  ]

SV_ROD_ACID_BALL = 24
        [ Constant: int  ]

SV_ROD_ELEC_BALL = 25
        [ Constant: int  ]

SV_ROD_FIRE_BALL = 26
        [ Constant: int  ]

SV_ROD_COLD_BALL = 27
        [ Constant: int  ]

SV_ROD_HAVOC = 28
        [ Constant: int  ]

SV_SCROLL_DARKNESS = 0
        [ Constant: int  ]

SV_SCROLL_AGGRAVATE_MONSTER = 1
        [ Constant: int  ]

SV_SCROLL_CURSE_ARMOR = 2
        [ Constant: int  ]

SV_SCROLL_CURSE_WEAPON = 3
        [ Constant: int  ]

SV_SCROLL_SUMMON_MONSTER = 4
        [ Constant: int  ]

SV_SCROLL_SUMMON_UNDEAD = 5
        [ Constant: int  ]
        xxx (summon?) 

SV_SCROLL_TRAP_CREATION = 7
        [ Constant: int  ]

SV_SCROLL_PHASE_DOOR = 8
        [ Constant: int  ]

SV_SCROLL_TELEPORT = 9
        [ Constant: int  ]

SV_SCROLL_TELEPORT_LEVEL = 10
        [ Constant: int  ]

SV_SCROLL_WORD_OF_RECALL = 11
        [ Constant: int  ]

SV_SCROLL_IDENTIFY = 12
        [ Constant: int  ]

SV_SCROLL_STAR_IDENTIFY = 13
        [ Constant: int  ]

SV_SCROLL_REMOVE_CURSE = 14
        [ Constant: int  ]

SV_SCROLL_STAR_REMOVE_CURSE = 15
        [ Constant: int  ]

SV_SCROLL_ENCHANT_ARMOR = 16
        [ Constant: int  ]

SV_SCROLL_ENCHANT_WEAPON_TO_HIT = 17
        [ Constant: int  ]

SV_SCROLL_ENCHANT_WEAPON_TO_DAM = 18
        [ Constant: int  ]
        xxx enchant missile? 

SV_SCROLL_STAR_ENCHANT_ARMOR = 20
        [ Constant: int  ]

SV_SCROLL_STAR_ENCHANT_WEAPON = 21
        [ Constant: int  ]

SV_SCROLL_RECHARGING = 22
        [ Constant: int  ]
        xxx 

SV_SCROLL_LIGHT = 24
        [ Constant: int  ]

SV_SCROLL_MAPPING = 25
        [ Constant: int  ]

SV_SCROLL_DETECT_GOLD = 26
        [ Constant: int  ]

SV_SCROLL_DETECT_ITEM = 27
        [ Constant: int  ]

SV_SCROLL_DETECT_TRAP = 28
        [ Constant: int  ]

SV_SCROLL_DETECT_DOOR = 29
        [ Constant: int  ]

SV_SCROLL_DETECT_INVIS = 30
        [ Constant: int  ]
        xxx (detect evil?) 

SV_SCROLL_SATISFY_HUNGER = 32
        [ Constant: int  ]

SV_SCROLL_BLESSING = 33
        [ Constant: int  ]

SV_SCROLL_HOLY_CHANT = 34
        [ Constant: int  ]

SV_SCROLL_HOLY_PRAYER = 35
        [ Constant: int  ]

SV_SCROLL_MONSTER_CONFUSION = 36
        [ Constant: int  ]

SV_SCROLL_PROTECTION_FROM_EVIL = 37
        [ Constant: int  ]

SV_SCROLL_RUNE_OF_PROTECTION = 38
        [ Constant: int  ]

SV_SCROLL_TRAP_DOOR_DESTRUCTION = 39
        [ Constant: int  ]
        xxx 

SV_SCROLL_STAR_DESTRUCTION = 41
        [ Constant: int  ]

SV_SCROLL_DISPEL_UNDEAD = 42
        [ Constant: int  ]
        xxx 

SV_SCROLL_GENOCIDE = 44
        [ Constant: int  ]

SV_SCROLL_MASS_GENOCIDE = 45
        [ Constant: int  ]

SV_SCROLL_ACQUIREMENT = 46
        [ Constant: int  ]

SV_SCROLL_STAR_ACQUIREMENT = 47
        [ Constant: int  ]

SV_SCROLL_FIRE = 48
        [ Constant: int  ]

SV_SCROLL_ICE = 49
        [ Constant: int  ]

SV_SCROLL_CHAOS = 50
        [ Constant: int  ]

SV_SCROLL_RUMOR = 51
        [ Constant: int  ]

SV_SCROLL_ARTIFACT = 52
        [ Constant: int  ]
        The "sval" codes for TV_POTION 

SV_POTION_WATER = 0
        [ Constant: int  ]

SV_POTION_APPLE_JUICE = 1
        [ Constant: int  ]

SV_POTION_SLIME_MOLD = 2
        [ Constant: int  ]
        xxx (fixed color) 

SV_POTION_SLOWNESS = 4
        [ Constant: int  ]

SV_POTION_SALT_WATER = 5
        [ Constant: int  ]

SV_POTION_POISON = 6
        [ Constant: int  ]

SV_POTION_BLINDNESS = 7
        [ Constant: int  ]
        xxx 

SV_POTION_CONFUSION = 9
        [ Constant: int  ]
        xxx 

SV_POTION_SLEEP = 11
        [ Constant: int  ]
        xxx 

SV_POTION_LOSE_MEMORIES = 13
        [ Constant: int  ]
        xxx 

SV_POTION_RUINATION = 15
        [ Constant: int  ]

SV_POTION_DEC_STR = 16
        [ Constant: int  ]

SV_POTION_DEC_INT = 17
        [ Constant: int  ]

SV_POTION_DEC_WIS = 18
        [ Constant: int  ]

SV_POTION_DEC_DEX = 19
        [ Constant: int  ]

SV_POTION_DEC_CON = 20
        [ Constant: int  ]

SV_POTION_DEC_CHR = 21
        [ Constant: int  ]

SV_POTION_DETONATIONS = 22
        [ Constant: int  ]

SV_POTION_DEATH = 23
        [ Constant: int  ]

SV_POTION_INFRAVISION = 24
        [ Constant: int  ]

SV_POTION_DETECT_INVIS = 25
        [ Constant: int  ]

SV_POTION_SLOW_POISON = 26
        [ Constant: int  ]

SV_POTION_CURE_POISON = 27
        [ Constant: int  ]

SV_POTION_BOLDNESS = 28
        [ Constant: int  ]

SV_POTION_SPEED = 29
        [ Constant: int  ]

SV_POTION_RESIST_HEAT = 30
        [ Constant: int  ]

SV_POTION_RESIST_COLD = 31
        [ Constant: int  ]

SV_POTION_HEROISM = 32
        [ Constant: int  ]

SV_POTION_BESERK_STRENGTH = 33
        [ Constant: int  ]

SV_POTION_CURE_LIGHT = 34
        [ Constant: int  ]

SV_POTION_CURE_SERIOUS = 35
        [ Constant: int  ]

SV_POTION_CURE_CRITICAL = 36
        [ Constant: int  ]

SV_POTION_HEALING = 37
        [ Constant: int  ]

SV_POTION_STAR_HEALING = 38
        [ Constant: int  ]

SV_POTION_LIFE = 39
        [ Constant: int  ]

SV_POTION_RESTORE_MANA = 40
        [ Constant: int  ]

SV_POTION_RESTORE_EXP = 41
        [ Constant: int  ]

SV_POTION_RES_STR = 42
        [ Constant: int  ]

SV_POTION_RES_INT = 43
        [ Constant: int  ]

SV_POTION_RES_WIS = 44
        [ Constant: int  ]

SV_POTION_RES_DEX = 45
        [ Constant: int  ]

SV_POTION_RES_CON = 46
        [ Constant: int  ]

SV_POTION_RES_CHR = 47
        [ Constant: int  ]

SV_POTION_INC_STR = 48
        [ Constant: int  ]

SV_POTION_INC_INT = 49
        [ Constant: int  ]

SV_POTION_INC_WIS = 50
        [ Constant: int  ]

SV_POTION_INC_DEX = 51
        [ Constant: int  ]

SV_POTION_INC_CON = 52
        [ Constant: int  ]

SV_POTION_INC_CHR = 53
        [ Constant: int  ]
        xxx 

SV_POTION_AUGMENTATION = 55
        [ Constant: int  ]

SV_POTION_ENLIGHTENMENT = 56
        [ Constant: int  ]

SV_POTION_STAR_ENLIGHTENMENT = 57
        [ Constant: int  ]

SV_POTION_SELF_KNOWLEDGE = 58
        [ Constant: int  ]

SV_POTION_EXPERIENCE = 59
        [ Constant: int  ]

SV_POTION_RESISTANCE = 60
        [ Constant: int  ]

SV_POTION_CURING = 61
        [ Constant: int  ]

SV_POTION_INVULNERABILITY = 62
        [ Constant: int  ]

SV_POTION_NEW_LIFE = 63
        [ Constant: int  ]
        The "sval" codes for TV_FOOD 

SV_FOOD_POISON = 0
        [ Constant: int  ]

SV_FOOD_BLINDNESS = 1
        [ Constant: int  ]

SV_FOOD_PARANOIA = 2
        [ Constant: int  ]

SV_FOOD_CONFUSION = 3
        [ Constant: int  ]

SV_FOOD_HALLUCINATION = 4
        [ Constant: int  ]

SV_FOOD_PARALYSIS = 5
        [ Constant: int  ]

SV_FOOD_WEAKNESS = 6
        [ Constant: int  ]

SV_FOOD_SICKNESS = 7
        [ Constant: int  ]

SV_FOOD_STUPIDITY = 8
        [ Constant: int  ]

SV_FOOD_NAIVETY = 9
        [ Constant: int  ]

SV_FOOD_UNHEALTH = 10
        [ Constant: int  ]

SV_FOOD_DISEASE = 11
        [ Constant: int  ]

SV_FOOD_CURE_POISON = 12
        [ Constant: int  ]

SV_FOOD_CURE_BLINDNESS = 13
        [ Constant: int  ]

SV_FOOD_CURE_PARANOIA = 14
        [ Constant: int  ]

SV_FOOD_CURE_CONFUSION = 15
        [ Constant: int  ]

SV_FOOD_CURE_SERIOUS = 16
        [ Constant: int  ]

SV_FOOD_RESTORE_STR = 17
        [ Constant: int  ]

SV_FOOD_RESTORE_CON = 18
        [ Constant: int  ]

SV_FOOD_RESTORING = 19
        [ Constant: int  ]
        many missing mushrooms 

SV_FOOD_BISCUIT = 32
        [ Constant: int  ]

SV_FOOD_JERKY = 33
        [ Constant: int  ]

SV_FOOD_RATION = 35
        [ Constant: int  ]

SV_FOOD_SLIME_MOLD = 36
        [ Constant: int  ]

SV_FOOD_WAYBREAD = 37
        [ Constant: int  ]

SV_FOOD_PINT_OF_ALE = 38
        [ Constant: int  ]

SV_FOOD_PINT_OF_WINE = 39
        [ Constant: int  ]

SV_FOOD_MIN_FOOD = 32
        [ Constant: int  ]
        * Special "sval" limit -- first "aimed" rod 

SV_ROD_MIN_DIRECTION = 12
        [ Constant: int  ]
        * Special "sval" limit -- first "large" chest 

SV_CHEST_MIN_LARGE = 4
        [ Constant: int  ]
        * Special "sval" limit -- first "good" magic/prayer book 

SV_BOOK_MIN_GOOD = 2
        [ Constant: int  ]

OBJ_GOLD_LIST = 480
        [ Constant: int  ]

MAX_GOLD = 18
        [ Constant: int  ]

3.  class artifact_type
=======================
[ created from struct artifact_type ]


self.name
        [ Member data: returns u32b  ]
        Name (offset) 

self.text
        [ Member data: returns u32b  ]
        Text (offset) 

self.tval
        [ Member data: returns byte  ]
        Artifact type 

self.sval
        [ Member data: returns byte  ]
        Artifact sub type 

self.pval
        [ Member data: returns s16b  ]
        Artifact extra info 

self.to_h
        [ Member data: returns s16b  ]
        Bonus to hit 

self.to_d
        [ Member data: returns s16b  ]
        Bonus to damage 

self.to_a
        [ Member data: returns s16b  ]
        Bonus to armor 

self.ac
        [ Member data: returns s16b  ]
        Base armor 

self.dd
        [ Member data: returns byte  ]

self.ds
        [ Member data: returns byte  ]
        Damage when hits 

self.weight
        [ Member data: returns s16b  ]
        Weight 

self.cost
        [ Member data: returns s32b  ]
        Artifact "cost" 

self.flags1
        [ Member data: returns u32b  ]
        Artifact Flags, set 1 

self.flags2
        [ Member data: returns u32b  ]
        Artifact Flags, set 2 

self.flags3
        [ Member data: returns u32b  ]
        Artifact Flags, set 3 

self.level
        [ Member data: returns byte  ]
        Artifact level 

self.rarity
        [ Member data: returns byte  ]
        Artifact rarity 

self.cur_num
        [ Member data: returns byte  ]
        Number created (0 or 1) 

self.max_num
        [ Member data: returns byte  ]
        Unused (should be "1") 

4.  class ego_item_type
=======================
[ created from struct ego_item_type ]


self.name
        [ Member data: returns u32b  ]
        Name (offset) 

self.text
        [ Member data: returns u32b  ]
        Text (offset) 

self.slot
        [ Member data: returns byte  ]
        Standard slot value 

self.rating
        [ Member data: returns byte  ]
        Rating boost 

self.level
        [ Member data: returns byte  ]
        Minimum level 

self.rarity
        [ Member data: returns byte  ]
        Object rarity 

self.max_to_h
        [ Member data: returns byte  ]
        Maximum to-hit bonus 

self.max_to_d
        [ Member data: returns byte  ]
        Maximum to-dam bonus 

self.max_to_a
        [ Member data: returns byte  ]
        Maximum to-ac bonus 

self.max_pval
        [ Member data: returns byte  ]
        Maximum pval 

self.cost
        [ Member data: returns s32b  ]
        Ego-item "cost" 

self.flags1
        [ Member data: returns u32b  ]
        Ego-Item Flags, set 1 

self.flags2
        [ Member data: returns u32b  ]
        Ego-Item Flags, set 2 

self.flags3
        [ Member data: returns u32b  ]
        Ego-Item Flags, set 3 

----------

IDENT_SENSE = 0x01
        [ Constant: int  ]

IDENT_FIXED = 0x02
        [ Constant: int  ]

IDENT_EMPTY = 0x04
        [ Constant: int  ]

IDENT_KNOWN = 0x08
        [ Constant: int  ]

IDENT_STOREB = 0x10
        [ Constant: int  ]

IDENT_MENTAL = 0x20
        [ Constant: int  ]

IDENT_CURSED = 0x40
        [ Constant: int  ]

IDENT_BROKEN = 0x80
        [ Constant: int  ]

lookup_kind(tval,sval)
        [ returns s16b  ]

