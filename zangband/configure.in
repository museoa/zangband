#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

VER_MAJOR=`awk '/#define VER_MAJOR/ { print $3 }' src/defines.h`
VER_MINOR=`awk '/#define VER_MINOR/ { print $3 }' src/defines.h`
VER_PATCH=`awk '/#define VER_PATCH/ { print $3 }' src/defines.h`
VER_EXTRA=`awk '/#define VER_EXTRA/ { print $3 }' src/defines.h`

if test -n $VER_EXTRA ; then
	VERSION="$VER_MAJOR.$VER_MINOR.$VER_PATCH-pre$VER_EXTRA"
else
	VERSION="$VER_MAJOR.$VER_MINOR.$VER_PATCH"
fi

AC_PREREQ(2.57)
AC_INIT(ZAngband, 2.7.3, bugs@zangband.org)
AC_CONFIG_SRCDIR([src/angband.h])
AC_CONFIG_HEADER([src/autoconf.h])

AC_DEFINE(PACKAGE_STRING, [ZAngband $VERSION])
AC_DEFINE(PACKAGE_VERSION, $VERSION)

dnl default option
GAMEGROUP="games"

AC_ARG_WITH(setgid,
[  --with-setgid=NAME      setgid usage: install angband as group NAME],
[case "${withval}" in
  no) GAMEGROUP="games";;
  yes) AC_MSG_ERROR(missing argument for --with-setgid);;
  *) GAMEGROUP="$withval";;
esac])
AC_SUBST(GAMEGROUP)


AC_ARG_WITH(tcltk,
[  --with-tcltk=DIR        Use DIR/include and DIR/lib for tcl and tk])

AC_ARG_WITH(tkdir,
[  --with-tkdir=TKDIR      Use TKDIR/include and TKDIR/lib for tk if
                          is in a different place from tcl directory
						  and is not auto-detected properly])

AC_ARG_WITH(gtk,
[  --with-gtk=yes          Use gtk support (you'll need to turn of sgid flag)])

AC_LANG([C])

# Checks for programs.
#AC_PROG_CXX
AC_PROG_CC
#AC_PROG_INSTALL

# Add gtk include paths if needed
AC_CHECK_PROGS(GTK_CONFIG, [gtk-config], [no])
if test $GTK_CONFIG != "no" ; then
	CFLAGS="$CFLAGS `$GTK_CONFIG --cflags`" 
	LDFLAGS="$LDFLAGS `$GTK_CONFIG --libs`"
fi

# Find X11 path
AC_PATH_X
if test -n "$x_includes" ; then
	CFLAGS="$CFLAGS -I$x_includes"
fi
if test -n "$x_libraries" ; then
	LDFLAGS="$LDFLAGS -L$x_libraries"
fi

# Checks for libraries.

AC_SEARCH_LIBS([XCreateImage], [X11],
	AC_DEFINE(USE_X11, 1, [Use basic X11 port])
	AC_DEFINE(USE_XPJ, 1, [Use X11 projected port]))

AC_SEARCH_LIBS([XawInitializeWidgetSet], [Xaw],
	AC_DEFINE(USE_XAW, 1, [Use xaw port]))

AC_SEARCH_LIBS([initscr], [ncurses curses], 
	AC_DEFINE(USE_GCU, 1, [Use gcu port]),
	# Only check termcap if we don't have GCU
	AC_CHECK_LIB([termcap], [tgetent], 
		AC_DEFINE(USE_CAP, 1, [Use termcap port])))

AC_SEARCH_LIBS([gtk_init_check], [gtk],
	AC_DEFINE(USE_GTK, 1, [Use gtk port]))

AC_SEARCH_LIBS([Tcl_Init], [tcl84 tcl8.4 tcl83 tcl8.3],
	AC_SEARCH_LIBS([Tk_Init], [tk84 tk8.4 tk83 tk8.3],
		TK_PORT="y" ; AC_SUBST(TK_PORT)
		AC_DEFINE(USE_TNB, 1, [Use tcl/tk port])
		AC_DEFINE(PLATFORM_X11, 1, [Use tcl/tk port X11 version])))

# FIXME: Replace `main' with a function in `-lpc':
AC_CHECK_LIB([pc], [main],
	LIBS="-lpc $LIBS"
	AC_DEFINE(USE_IBM, 1, [Use DOS port]))

# FIXME: Replace `main' with a function in `-lalleg':
AC_CHECK_LIB([alleg], [main],
	LIBS="-lalleg $LIBS"
	AC_DEFINE(USE_DOS, 1, [Use graphical DOS port])
	AC_DEFINE(USE_BACKGROUND, 1, [Background support for DOS port]))

# FIXME: Replace `main' with a function in `-lGn':
AC_CHECK_LIB([Gn], [main])
# FIXME: Replace `main' with a function in `-lICE':
AC_CHECK_LIB([ICE], [main])
# FIXME: Replace `main' with a function in `-lSM':
AC_CHECK_LIB([SM], [main])
# FIXME: Replace `main' with a function in `-lXext':
AC_CHECK_LIB([Xext], [main])
# FIXME: Replace `main' with a function in `-lXm':
AC_CHECK_LIB([Xm], [main])
# FIXME: Replace `main' with a function in `-lXmu':
AC_CHECK_LIB([Xmu], [main])
# FIXME: Replace `main' with a function in `-lXt':
AC_CHECK_LIB([Xt], [main])
# FIXME: Replace `main' with a function in `-lbsd':
AC_CHECK_LIB([bsd], [main])
# FIXME: Replace `main' with a function in `-lcposix':
AC_CHECK_LIB([cposix], [main])
# FIXME: Replace `main' with a function in `-linet':
AC_CHECK_LIB([inet], [main])
# FIXME: Replace `main' with a function in `-lnsl_s':
AC_CHECK_LIB([nsl_s], [main])
# FIXME: Replace `main' with a function in `-lrpcsvc':
AC_CHECK_LIB([rpcsvc], [main])
# FIXME: Replace `main' with a function in `-lsun':
AC_CHECK_LIB([sun], [main])
# FIXME: Replace `main' with a function in `-lvga':
#AC_CHECK_LIB([vga], [main])
# FIXME: Replace `main' with a function in `-lvgagl':
#AC_CHECK_LIB([vgagl], [main])
# FIXME: Replace `main' with a function in `-lvideo':
AC_CHECK_LIB([video], [main])
# FIXME: Replace `main' with a function in `-lwinmm':
AC_CHECK_LIB([winmm], [main])
# FIXME: Replace `main' with a function in `-lz':
AC_CHECK_LIB([z], [main])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h limits.h locale.h memory.h netdb.h stddef.h stdint.h stdlib.h string.h sys/file.h sys/ioctl.h sys/param.h sys/time.h sys/timeb.h termio.h unistd.h])

AC_CHECK_HEADERS([termios.h], 
	AC_DEFINE(USE_VCS, 1, [Use termios port]))

AC_CHECK_HEADERS([tcl.h])

AC_CHECK_HEADERS([tkFont.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_VOLATILE

# Checks for library functions.
AC_FUNC_ERROR_AT_LINE
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MEMCMP
AC_FUNC_REALLOC
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_STRCOLL
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([floor ftruncate gethostname memchr memmove memset mkdir modf select setlocale strchr strcspn strdup strerror strpbrk strrchr strstr strtol strtoul])

AC_CHECK_FUNCS([Tk_SetClassProcs])

AC_CONFIG_FILES([makefile])
AC_OUTPUT
