dnl Process this file with autoconf to produce a configure script.

dnl Initialize autoconf - look for the existance of a file to make sure
dnl the source distribution is installed correctly.
AC_INIT(src/main.c)

dnl write the resulting #defines into a header file
AC_CONFIG_HEADERS(src/autoconf.h)

AC_ARG_WITH(setgid,
[  --with-setgid=NAME      setgid usage: install angband as group NAME],
[case "${withval}" in
  no) GAMEGROUP="games";;
  yes) AC_MSG_ERROR(missing argument for --with-setgid);;
  *) GAMEGROUP="$withval";;
esac])
AC_SUBST(GAMEGROUP)


AC_ARG_WITH(tcltk,
[  --with-tcltk=DIR        Use DIR/include and DIR/lib for tcl and tk])

AC_ARG_WITH(tkdir,
[  --with-tkdir=TKDIR      Use TKDIR/include and TKDIR/lib for tk if
                          is in a different place from tcl directory
						  and is not auto-detected properly])

AC_LANG_C

basedir=`pwd`

dnl generate the installation path for the ./lib/ folder
if test "$GAMEGROUP" != ""; then
  game_datadir="$datadir/games/$PACKAGE/lib/"
else
  game_datadir="$basedir/lib/"
  bindir="$basedir"
fi
AC_DEFINE_UNQUOTED(DEFAULT_PATH, "$game_datadir", [Default path to game])
DEFAULT_PATH="$game_datadir"
AC_SUBST(DEFAULT_PATH)

dnl Checks for programs.
AC_PROG_CC
AC_CHECK_TOOL(RANLIB, ranlib)

dnl -fno-strength-reduce prevents a bug in some versions of gcc
if test "$GCC" = yes; then
  CFLAGS="$CFLAGS -fno-strength-reduce"
fi


AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h limits.h strings.h sys/file.h sys/ioctl.h \
sys/time.h termio.h unistd.h)

dnl Checks for libraries.

AC_CANONICAL_HOST
case $host_os in
  *cygwin* ) CYGWIN=yes;;
         * ) CYGWIN=no;;
esac

if test "$CYGWIN" = "yes"; then
  AC_DEFINE(WINDOWS, 1, [WIN32 port])
  LIBS="$LIBS -lwinmm"
  LDFLAGS="$LDFLAGS -s -mwindows -e _mainCRTStartup"
  cygwin="y"
  AC_SUBST(cygwin)
else
  dnl Check for ncurses, curses, or termcap
  AC_CHECK_LIB(ncurses, initscr, [AC_DEFINE(USE_GCU, 1, [GCU port]) AC_DEFINE(USE_NCURSES, 1, [Using ncurses]) LIBS="$LIBS -lncurses"])
  if test "$ac_cv_lib_ncurses_initscr" != yes; then
    AC_CHECK_LIB(curses, initscr, [AC_DEFINE(USE_GCU, 1) LIBS="$LIBS -lcurses"])
    if test "$ac_cv_lib_curses_initscr" != yes; then
      AC_CHECK_LIB(termcap, tgetent, [AC_DEFINE(USE_CAP, 1, [CAP port]) LIBS="$LIBS -ltermcap"])
    fi
  fi

  dnl Checks for header files.
  AC_PATH_XTRA

  if test "$no_x" != "yes"; then
    LIBS="$LIBS -lX11"
    AC_DEFINE(USE_X11, 1, [X11 port])
    AC_DEFINE(USE_XPJ, 1, [XPJ port])
  fi

  LIBS="$X_PRE_LIBS $X_LIBS $X_EXTRA_LIBS $LIBS"
  CFLAGS="$X_CFLAGS $CFLAGS"
  LDFLAGS="$X_LIBS $LDFLAGS"

  dnl Check for the Athena widget set
  AC_CHECK_LIB(Xaw, XawInitializeWidgetSet, [AC_DEFINE(USE_XAW, 1, [XAW port]) LIBS="$LIBS -lXaw"])
  
  
  dnl We need to check in lots of places for the tk port. :-/
  if test -z "$with_tcltk" || test "$with_tcltk" = yes; then
    AC_CHECK_HEADER(/usr/local/include/tcl.h,
	  [BASE_TCL_DIR="/usr/local/include"],
  	  [AC_CHECK_HEADER(/usr/local/include/tcl/tcl.h,
	    [BASE_TCL_DIR="/usr/local/include/tcl"],
	    [AC_CHECK_HEADER(/usr/include/tcl.h,
	      [BASE_TCL_DIR="/usr/include"],
	      [AC_CHECK_HEADER(/usr/include/tcl8.4/tcl.h,
	        [BASE_TCL_DIR="/usr/include/tcl8.4"],
	        [AC_CHECK_HEADER(/usr/local/include/tcl8.4/tcl.h,
	          [BASE_TCL_DIR="/usr/local/include/tcl8.4"],
	        [])
	      ])
	    ])
	  ])
	])
	
	BASE_TK_DIR=$BASE_TCL_DIR
	
	AC_CHECK_HEADER(/usr/local/include/tk.h,
	  [BASE_TK_DIR="/usr/local/include"],
  	  [AC_CHECK_HEADER(/usr/local/include/tcl/tk.h,
	    [BASE_TK_DIR="/usr/local/include/tk"],
	    [AC_CHECK_HEADER(/usr/include/tk.h,
	      [BASE_TK_DIR="/usr/include"],
	      [AC_CHECK_HEADER(/usr/include/tk8.4/tk.h,
	        [BASE_TK_DIR="/usr/include/tk8.4"],
	        [AC_CHECK_HEADER(/usr/local/include/tk8.4/tk.h,
	          [BASE_TK_DIR="/usr/local/include/tk8.4"],
	        [])
	      ])
	    ])
	  ])
	])
	
    test -d /usr/local/lib && CFLAGS="-L/usr/local/lib $CFLAGS"
  else
    BASE_TCL_DIR="$with_tcltk/include"
    CFLAGS="-L$with_tcltk/lib $CFLAGS"
  fi

  if test -n "$with_tkdir"; then
    BASE_TK_DIR="$CPPFLAGS -I$with_tkdir/include"
    CFLAGS="-L$with_tkdir/lib $CFLAGS"
  fi
  
  CPPFLAGS="-I$BASE_TCL_DIR -I$BASE_TK_DIR $CPPFLAGS"
  
  dnl Checks for libraries.
  AC_CHECK_HEADER(tcl.h,,[AC_MSG_WARN(Can't find tcl.h)])
  AC_CHECK_HEADER(tk.h,,[AC_MSG_WARN(Can't find tk.h)])
  
  AC_SEARCH_LIBS(Tcl_CreateInterp, tcl8.4 tcl84,[],[],[])
  AC_SEARCH_LIBS(Tk_Init, tk8.4 tk84,[],[],[])
  
  dnl FreeBSD locations of headers
  AC_CHECK_HEADER($BASE_TCL_DIR/generic/tclInt.h,
    [CPPFLAGS="$CPPFLAGS -I$BASE_TCL_DIR/generic"],
  	[])
  AC_CHECK_HEADER($BASE_TCL_DIR/unix/tclUnixPort.h,
    [CPPFLAGS="$CPPFLAGS -I$BASE_TCL_DIR/unix"],
  	[])
  AC_CHECK_HEADER($BASE_TK_DIR/generic/tkPort.h,
    [CPPFLAGS="$CPPFLAGS -I$BASE_TK_DIR/generic"],
  	[])
  AC_CHECK_HEADER($BASE_TK_DIR/generic/tkInt.h,
    [CPPFLAGS="$CPPFLAGS -I$BASE_TK_DIR/generic"],
  	[])
  
  dnl Debian location of headers
  
  AC_CHECK_HEADER($BASE_TCL_DIR/tcl-private/generic/tclInt.h,
    [CPPFLAGS="-I$BASE_TCL_DIR/tcl-private/generic $CPPFLAGS"],
  	[])
  AC_CHECK_HEADER($BASE_TCL_DIR/tcl-private/unix/tclUnixPort.h,
    [CPPFLAGS="-I$BASE_TCL_DIR/tcl-private/unix $CPPFLAGS"],
  	[])
  AC_CHECK_HEADER($BASE_TK_DIR/tk-private/generic/tkPort.h,
    [CPPFLAGS="-I$BASE_TK_DIR/tk-private/generic $CPPFLAGS"],
  	[])
  AC_CHECK_HEADER($BASE_TK_DIR/tk-private/generic/tkInt.h,
    [CPPFLAGS="-I$BASE_TK_DIR/tk-private/generic $CPPFLAGS"],
  	[])
  
  AC_TRY_COMPILE([#include "tcl.h"],[Tcl_Obj x;],
  [
	AC_CHECK_HEADER(tkInt.h,,[AC_MSG_ERROR(Can't find tkInt.h)])
    AC_CHECK_HEADER(tkCanvas.h,,[AC_MSG_ERROR(Can't find tkCanvas.h)])
	
	TK_PORT="y"
	AC_SUBST(TK_PORT)
	AC_DEFINE(USE_TNB, 1, [Tk port])
	AC_DEFINE(PLATFORM_X11, 1, [Force use of X11 version of tk port])
  ]
  ,[AC_MSG_WARN(Can't compile tk port)])
fi


dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_TYPE_SIGNAL
AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_CHECK_FUNCS(gethostname mkdir select strstr strtol usleep mkstemp)

AC_OUTPUT(makefile)
